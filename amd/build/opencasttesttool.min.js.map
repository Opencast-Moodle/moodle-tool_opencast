{"version":3,"sources":["../src/opencasttesttool.js"],"names":["define","$","Ajax","Str","ModalFactory","Notification","TestTool","activateButton","registerClickEvent","prototype","is","hasClass","removeAttr","removeClass","addClass","click","e","preventDefault","apiurl","find","val","apiusername","apipassword","promise","call","methodname","args","titlePromise","get_string","modalPromise","create","type","types","CANCEL","when","then","connectionTestResponse","title","modal","setTitle","setBody","testresult","show","catch","exception"],"mappings":"AAuBCA,OAAM,kCAAC,CACJ,QADI,CAEJ,WAFI,CAGJ,UAHI,CAIJ,oBAJI,CAKJ,mBALI,CAAD,CAMP,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAuBC,CAAvB,CAAqCC,CAArC,CAAmD,CAK/C,GAAIC,CAAAA,CAAQ,CAAG,UAAW,CACtB,KAAKC,cAAL,GACA,KAAKC,kBAAL,EACH,CAHD,CAQAF,CAAQ,CAACG,SAAT,CAAmBF,cAAnB,CAAoC,UAAW,CAC3C,GAAGN,CAAC,CAAC,iBAAD,CAAD,CAAqBS,EAArB,CAAwB,UAAxB,GAAuCT,CAAC,CAAC,iBAAD,CAAD,CAAqBU,QAArB,CAA8B,UAA9B,CAA1C,CAAqF,CACjFV,CAAC,CAAC,iBAAD,CAAD,CAAqBW,UAArB,CAAgC,UAAhC,EACAX,CAAC,CAAC,iBAAD,CAAD,CAAqBW,UAArB,CAAgC,OAAhC,EACAX,CAAC,CAAC,iBAAD,CAAD,CAAqBY,WAArB,CAAiC,sBAAjC,EACAZ,CAAC,CAAC,iBAAD,CAAD,CAAqBa,QAArB,CAA8B,eAA9B,CACH,CACJ,CAPD,CAWAR,CAAQ,CAACG,SAAT,CAAmBD,kBAAnB,CAAwC,UAAW,CAC/CP,CAAC,CAAC,iBAAD,CAAD,CAAqBc,KAArB,CAA2B,SAASC,CAAT,CAAY,CACnCA,CAAC,CAACC,cAAF,GADmC,GAG/BC,CAAAA,CAAM,CAAGjB,CAAC,CAAC,eAAD,CAAD,CAAmBkB,IAAnB,CAAwB,OAAxB,EAAiCC,GAAjC,EAHsB,CAI/BC,CAAW,CAAGpB,CAAC,CAAC,oBAAD,CAAD,CAAwBkB,IAAxB,CAA6B,OAA7B,EAAsCC,GAAtC,EAJiB,CAK/BE,CAAW,CAAGrB,CAAC,CAAC,oBAAD,CAAD,CAAwBkB,IAAxB,CAA6B,OAA7B,EAAsCC,GAAtC,EALiB,CAe/BG,CAAO,CAAGrB,CAAI,CAACsB,IAAL,CADA,CAAC,CAACC,UAAU,CAAE,oCAAb,CAAmDC,IAAI,CAP3D,CACP,OAAUR,CADH,CAEP,YAAeG,CAFR,CAGP,YAAgBC,CAHT,CAOI,CAAD,CACA,CAfqB,CAiB/BK,CAAY,CAAGxB,CAAG,CAACyB,UAAJ,CAAe,aAAf,CAA8B,eAA9B,CAjBgB,CAkB/BC,CAAY,CAAGzB,CAAY,CAAC0B,MAAb,CAAoB,CAACC,IAAI,CAAE3B,CAAY,CAAC4B,KAAb,CAAmBC,MAA1B,CAApB,CAlBgB,CAmBnChC,CAAC,CAACiC,IAAF,CAAOX,CAAO,CAAC,CAAD,CAAd,CAAmBI,CAAnB,CAAiCE,CAAjC,EAA+CM,IAA/C,CAAoD,SAASC,CAAT,CAAiCC,CAAjC,CAAwCC,CAAxC,CAA+C,CAC/FA,CAAK,CAACC,QAAN,CAAeF,CAAf,EACAC,CAAK,CAACE,OAAN,CAAcJ,CAAsB,CAACK,UAArC,EAEAH,CAAK,CAACI,IAAN,GACA,MAAOJ,CAAAA,CACV,CAND,EAMGK,KANH,CAMStC,CAAY,CAACuC,SANtB,CAOH,CA1BD,CA2BH,CA5BD,CA8BA,MAAoD,CAQhD,KAAQ,eAAW,CACf,MAAO,IAAItC,CAAAA,CACd,CAV+C,CAYvD,CAxEM,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for opencast connection test tool\n *\n * @module     tool_opencast/opencasttesttool\n * @package    tool_opencast\n * @copyright  2021 Farbod Zamani (zamani@elan-ev.de)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n define([\n    'jquery',\n    'core/ajax',\n    'core/str',\n    'core/modal_factory',\n    'core/notification'],\nfunction($, Ajax, Str, ModalFactory, Notification) {\n\n    /**\n     * TestTool class.\n     */\n    var TestTool = function() {\n        this.activateButton();\n        this.registerClickEvent();\n    };\n\n    /**\n     * Register button activation.\n     */\n    TestTool.prototype.activateButton = function() {\n        if($('#testtool-modal').is(':visible') && $('#testtool-modal').hasClass('disabled')) {\n            $('#testtool-modal').removeAttr('disabled');\n            $('#testtool-modal').removeAttr('title');\n            $('#testtool-modal').removeClass('disabled btn-warning');\n            $('#testtool-modal').addClass('btn-secondary');\n        }\n    };\n    /**\n     * Register event listener.\n     */\n    TestTool.prototype.registerClickEvent = function() {\n        $('#testtool-modal').click(function(e) {\n            e.preventDefault();\n\n            var apiurl = $('#admin-apiurl').find('input').val();\n            var apiusername = $('#admin-apiusername').find('input').val();\n            var apipassword = $('#admin-apipassword').find('input').val();\n\n            var args = {\n                'apiurl': apiurl,\n                'apiusername': apiusername,\n                'apipassword' : apipassword\n            };\n\n            // Get options.\n            var request = [{methodname: 'tool_opencast_connection_test_tool', args: args}];\n            var promise = Ajax.call(request);\n\n            var titlePromise = Str.get_string('testtoolurl', 'tool_opencast');\n            var modalPromise = ModalFactory.create({type: ModalFactory.types.CANCEL});\n            $.when(promise[0], titlePromise, modalPromise).then(function(connectionTestResponse, title, modal) {\n                modal.setTitle(title);\n                modal.setBody(connectionTestResponse.testresult);\n\n                modal.show();\n                return modal;\n            }).catch(Notification.exception);\n        });\n    };\n\n    return /** @alias tool_opencast/opencasttesttool */ {\n\n        /**\n         * Initialise the module.\n         *\n         * @method init\n         * @return {TestTool}\n         */\n        'init': function() {\n            return new TestTool();\n        }\n    };\n});\n"],"file":"opencasttesttool.min.js"}