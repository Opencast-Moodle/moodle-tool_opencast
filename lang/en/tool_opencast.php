<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Plugin strings are defined here.
 *
 * @package     tool_opencast
 * @category    string
 * @copyright   2018 Tobias Reischmann <tobias.reischmann@wi.uni-muenster.de>
 * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

defined('MOODLE_INTERNAL') || die();

$string['addinstance'] = 'Add instance';
$string['apicreadentialstestfailedlong'] = 'The given Username or Password for the Opencast API is not valid.<br />Please use valid Username and Password in order to avoid fatal error during tasks which use this setting.';
$string['apicreadentialstestfailedshort'] = 'Opencast API User Credentials test failed with http code: {$a}';
$string['apicreadentialstestsuccessfulshort'] = 'Opencast API User Credentials test successful.';
$string['apipassword'] = 'Password of Opencast API user';
$string['apipassworddesc'] = 'Configure the password of the Opencast user who is used to do the Opencast API calls.';
$string['apipasswordempty'] = 'Password of Opencast API user is not configured correctly. Go to the settings of the Opencast API tool to fix this.';
$string['apiurl'] = 'Opencast API URL';
$string['apiurldesc'] = 'Configure the base URL of the Opencast system. A valid URL is required here. If you omit the protocol part here, \'https://\' is added on-the-fly when doing Opencast API calls.';
$string['apiurlempty'] = 'URL of Opencast API is not configured correctly. Go to the settings of the Opencast API tool to fix this.';
$string['apiurltestfailedlong'] = 'There is no Opencast instance running on the given URL.<br />Please use a valid URL in order to avoid fatal error during tasks which use this setting.';
$string['apiurltestfailedshort'] = 'Opencast API URL test failed with http code: {$a}';
$string['apiurltestsucceedbutnocredentialslong'] = 'The Opencast API URL is valid, but Username or Password are not yet provided.<br />Please enter valid Username and Password in order to avoid fatal error during tasks which use this setting.';
$string['apiurltestsuccessfulshort'] = 'Opencast API URL test successful.';
$string['apiusername'] = 'Username of Opencast API user';
$string['apiusernamedesc'] = 'Configure the username of the Opencast user who is used to do the Opencast API calls. Moodle uses this Opencast user for all communication with Opencast. Authorization is done by adding suitable roles to the call.';
$string['apiusernameempty'] = 'Username of Opencast API user is not configured correctly. Go to the settings of the Opencast API tool to fix this.';
$string['configuration'] = 'Configuration';
$string['configuration_instance'] = 'Configuration: {$a}';
$string['connecttimeout'] = 'Connection timeout';
$string['connecttimeoutdesc'] = 'Configure the time in milliseconds while Moodle is trying to connect to Opencast. If Opencast does not answer within this time, the connection attempt times out.';
$string['delete_instance'] = 'Delete instance';
$string['delete_instance_confirm'] = 'Do you really want to delete this instance?<br>
Teachers will not be able to see videos used in this instance anymore.<br>
<b>Caution:</b> All data related to this instance will be lost.<br><br>
The deletion will be performed after you click on \'Save changes\' on the main settings page.';
$string['demoservernotification'] = 'The Opencast API tool is currently configured to connect to the <a href=\'https://stable.opencast.org\'>public Opencast demo server</a>. You can use this Opencast server for evaluating this plugin.<br />Do not use it for any production purposes. Please <a href=\'https://docs.opencast.org/\'>setup your own Opencast server</a> instead.';
$string['errornumdefaultinstances'] = 'There must be exactly one default Opencast instance.';
$string['exception_code_unabletoaddhandler'] = 'There was an error loading the opencast api middleware, must be fixed by a developer.';
$string['exception_connect'] = 'Opencast API call failed: {$a}';
$string['exception_connect_generic'] = 'Opencast is unreachable due to a connection error.';
$string['exception_request_400'] = 'Unexpected Opencast API response error: (400) Bad Request!';
$string['exception_request_401'] = 'Unexpected Opencast API response error: (401) Unauthorized!';
$string['exception_request_403'] = 'Unexpected Opencast API response error: (403) Forbidden!';
$string['exception_request_404'] = 'Unexpected Opencast API response error: (404) Not found!';
$string['exception_request_405'] = 'Unexpected Opencast API response error: (405) Method not allowed!';
$string['exception_request_408'] = 'Unexpected Opencast API response error: (408) Request Timeout!';
$string['exception_request_409'] = 'Unexpected Opencast API response error: (409) Conflict!';
$string['exception_request_410'] = 'Unexpected Opencast API response error: (410) Gone!';
$string['exception_request_422'] = 'Unexpected Opencast API response error: (422) Unprocessable Conten!';
$string['exception_request_500'] = 'Unexpected Opencast API response error: (500) Internal Server Error!';
$string['exception_request_501'] = 'Unexpected Opencast API response error: (501) Not Implemented!';
$string['exception_request_502'] = 'Unexpected Opencast API response error: (502) Bad Gateway!';
$string['exception_request_503'] = 'Unexpected Opencast API response error: (503) Service Unavailable!';
$string['exception_request_generic'] = 'An error occurred while trying to reach Opencast Server. Please try again later.';
$string['exception_request_ingest_endpoint_notfound'] = 'The ingest endpoint is not available, this has to be fix by the system administrator.';
$string['isdefault'] = 'Default';
$string['isvisible'] = 'Is visible to teachers';
$string['lticonsumerkey'] = 'Consumer key';
$string['lticonsumerkey_desc'] = 'LTI Consumer key for the integration of Opencast services that require authentication such as Studio or the editor.';
$string['lticonsumersecret'] = 'Consumer secret';
$string['lticonsumersecret_desc'] = 'LTI Consumer secret for the integration of Opencast services that require authentication.';
$string['maintenance_default_notification_message'] = '<h5>Opencast Maintenance Notice</h5><br>Please note that Opencast is currently undergoing maintenance. As a result, some or all features related to Opencast may be temporarily unavailable. Thank you for your understanding.';
$string['maintenance_exception_message'] = 'Opencast is currently undergoing maintenance. Interactions are temporarily disabled.';
$string['maintenanceheader'] = 'Maintenance';
$string['maintenanceheader_desc'] = 'In this section the maintenance mode can be configured with the following settings.<br />Depending on Opencast feature and settings availability, is it also possible to {$a}';
$string['maintenancemode'] = 'Maintenance mode';
$string['maintenancemode_btn'] = 'Sync Opencast Maintenance Mode';
$string['maintenancemode_btn_disabled'] = 'Required js modules are not loaded.';
$string['maintenancemode_datetime_expired_error'] = 'This field should not be in the past!';
$string['maintenancemode_datetime_ge_error'] = 'This field should be before "{$a}"';
$string['maintenancemode_datetime_le_error'] = 'This field should be after "{$a}"';
$string['maintenancemode_desc'] = 'Setting maintenance mode to avoid conflict during Opencast downtime.<br>If Read-Only mode is selected, only reading resources from Opencast will be allowed.';
$string['maintenancemode_disable'] = 'Disable';
$string['maintenancemode_enable'] = 'Enable';
$string['maintenancemode_end'] = 'Maintenance ends at';
$string['maintenancemode_end_desc'] = 'The end date and time of maintenance';
$string['maintenancemode_message'] = 'Maintenance Message';
$string['maintenancemode_message_desc'] = 'An error message to display during maintenance.';
$string['maintenancemode_modal_sync_confirmation_btn'] = 'Sync';
$string['maintenancemode_modal_sync_confirmation_text'] = 'Are you sure to sync the maintenance mode with Opencast? This will overwrite the current configuration.';
$string['maintenancemode_modal_sync_confirmation_title'] = 'Sync Opencast Maintenance Mode';
$string['maintenancemode_modal_sync_error_noinstance_message'] = 'Unable to find the Opencast instance id!';
$string['maintenancemode_modal_sync_error_title'] = 'Syncing Error';
$string['maintenancemode_modal_sync_failed'] = 'Maintenance Synchronization Unsuccessful!';
$string['maintenancemode_modal_sync_succeeded'] = 'Maintenance successfully synchronized. The page will refresh in 3 seconds to apply the updated changes.';
$string['maintenancemode_notiflevel'] = 'Notification Level';
$string['maintenancemode_notiflevel_desc'] = 'By this setting you can set the level of notification message which helps rendering it in different styles and color based on the level e.g. Error Level will print a notification in a red box.';
$string['maintenancemode_notiflevel_error'] = 'Error';
$string['maintenancemode_notiflevel_info'] = 'Information';
$string['maintenancemode_notiflevel_success'] = 'Success';
$string['maintenancemode_notiflevel_warning'] = 'Warning';
$string['maintenancemode_readonly'] = 'Read Only';
$string['maintenancemode_start'] = 'Maintenance starts at';
$string['maintenancemode_start_desc'] = 'The start date and time of maintenance';
$string['name'] = 'Name';
$string['needphp55orhigher'] = 'PHP Version 5.5 or higher is needed';
$string['nomockhandler'] = 'The Opencast Api Object is unable to handle the responses for testing purposes.';
$string['notestingjsonresponses'] = 'The JSON responses are not set, please make sure to use api_testable::add_json_response before running and using the class.';
$string['ocinstances'] = 'Opencast Instances';
$string['ocinstancesdesc'] = 'Defines a list of Opencast Instances to which the Opencast plugins can connect.';
$string['opencast:externalapi'] = 'Access to Opencast API webservices';
$string['opencast:instructor'] = 'Gives the role of an instructor in Opencast';
$string['opencast:learner'] = 'Gives the role of a learner in Opencast';
$string['pluginname'] = 'Opencast API';
$string['privacy:metadata'] = 'The Opencast API admin tool only provides API endpoints and general settings for the set of Opencast plugins. It stores which Opencast series belongs to which Moodle course, but it does not store any personal data.';
$string['serverconnectionerror'] = 'There was a problem with the connection to the Opencast server. Please check your Opencast API credentials and your network settings.';
$string['testtooldisabledbuttontitle'] = 'Unable to conduct the connection test due to unloaded js modules.';
$string['testtoolheader'] = 'Connection test tool';
$string['testtoolheaderdesc'] = 'To test the current Opencast API settings use: {$a}';
$string['testtoolurl'] = 'Connection Test Tool';
$string['timeout'] = 'Overall API request execution timeout';
$string['timeoutdesc'] = 'Configure the time in milliseconds each API request to Opencast may take. If Opencast does not finish answering the request within this time, the request is aborted.';
$string['wrongmimetypedetected'] = 'Wrong mimetype was detected, while trying to upload {$a->filename} from course {$a->coursename}. You can only upload video files!';

$string['shared_settings'] = 'Shared settings';
$string['general_settings'] = 'General settings';

$string['blocksettings'] = 'Settings for a block instance';

// $string['cachevalidtime'] = 'Cache valid time';
// $string['cachevalidtime_desc'] = 'Time in seconds, before the cache for the video data of each course is refreshed.';
// $string['uploadtimeout'] = 'Moodle to Opencast upload timeout';
// $string['uploadtimeoutdesc'] = 'Configure the time in seconds a single video upload may take during the background uploading task.';
// $string['faileduploadretrylimit'] = 'Limit failed upload attempts';
// $string['faileduploadretrylimitdesc'] = 'Each upload job will be archived once the maximum number of failed attempts is reached. When a job is archived, teachers must decide whether to delete it or manually re-queue it. <br/>The uploader will always be notified. If the "event status notification" option ("eventstatusnotificationenabled") is enabled, other teachers in the course will also be informed about the archived status. <br/><strong>NOTE:</strong> A value of 0 (default) or leaving the field empty means there is no limit.';
// $string['limituploadjobs'] = 'Limit upload job by cron';
// $string['limituploadjobsdesc'] = 'Limit the count of uploadjobs done by one cronjob. The cronjob can be scheduled here: {$a}';


$string['acl_settingcontrol'] = 'Enable visibility control';
$string['acl_settingcontrol_desc'] = 'If enabled, teachers can control the visibility of an Opencast episode on upload.';
$string['acl_settingcontrolafter'] = 'Allow episode visibility control after processing';
$string['acl_settingcontrolafter_desc'] = 'If enabled, teachers can control the visibility of an Opencast episode after the episode has been processed in Opencast.';
$string['acl_settingcontrolgroup'] = 'Allow episode group restriction';
$string['acl_settingcontrolgroup_desc'] = 'If enabled, teachers can not only control the visibility of an Opencast episode for all course users but can also restrict the visibility to particular course groups.';
$string['acl_settingcontrolwaitingtime'] = 'Waiting time for scheduled visibility change (Minutes)';
$string['acl_settingcontrolwaitingtime_desc'] = 'It defines a minimum waiting time (in minutes) that scheduled visibility change process should wait. This time span will be added to current time for the scheduled video change date filed in add video form, it will also be used to validate that field. Based on how fast the Opencast instance processes the videos, this waiting time could be configured. <br />NOTE: When empty or (zero) "0", the default value is used.';
$string['aclownerrole'] = 'ACL owner role';
$string['aclownerrole_desc'] = 'Name of the role that identifies the owner of a video/series. The role must also be specified in the roles table. The role must be permanent and include a user-related placeholder, e.g. ROLE_OWNER_[USER_EMAIL]. It should not include any course-related placeholders. If empty, owner-related plugin functionalities are disabled.';
$string['aclrolesname'] = 'Roles';
$string['aclrolesnamedesc'] = 'You can use placeholders in the role name which are automatically replaced (<a target="_blank" href="https://moodle.docs.opencast.org/#block/general_settings/#placeholders">list of placeholders</a>). The list of actions must be comma-separated.';
$string['addactivity_settingavailability'] = 'Set series module availability';
$string['addactivity_settingavailability_desc'] = 'If enabled, teachers can set the availability conditions when a new Opencast Video Provider activity for series is added to a course.';
$string['addactivity_settingavailability_note'] = 'Please note: This feature is only available if availability is globally enabled on the {$a} admin setting page.';
$string['addactivity_settingdefaulttitle'] = 'Default Opencast activity series module title';
$string['addactivity_settingdefaulttitle_desc'] = 'The default title to be used when a new Opencast Video Provider activity for series is added to a course.';
$string['addactivity_settingenabled'] = 'Enable "Add Opencast activity series module"';
$string['addactivity_settingenabled_desc'] = 'If enabled, teachers can add an Opencast Activity series module to a course. This Activity series module will be pointing to the course\'s Opencast series.';
$string['addactivity_settingintro'] = 'Add series module intro';
$string['addactivity_settingintro_desc'] = 'If enabled, teachers can add an intro to the Opencast activity series module. This intro will be shown on the course overview page.';
$string['addactivity_settingsection'] = 'Choose series module section';
$string['addactivity_settingsection_desc'] = 'If enabled, teachers can choose the section which the Opencast Activity series module will be added to.';
$string['addactivityepisode_settingavailability'] = 'Set episode module availability';
$string['addactivityepisode_settingavailability_desc'] = 'If enabled, teachers can set the availability conditions when a new Opencast Activity episode module is added to a course.';
$string['addactivityepisode_settingenabled'] = 'Enable "Add Opencast Activity episode module"';
$string['addactivityepisode_settingenabled_desc'] = 'If enabled, teachers can add an Opencast Video Provider activity for episodes to a course. This Opencast Activity episode module will be pointing to an Opencast episode.';
$string['addactivityepisode_settingintro'] = 'Add episode module intro';
$string['addactivityepisode_settingintro_desc'] = 'If enabled, teachers can add a intro to the Opencast Activity episode module. This intro will be shown on the course overview page.';
$string['addactivityepisode_settingsection'] = 'Choose episode module section';
$string['addactivityepisode_settingsection_desc'] = 'If enabled, teachers can choose the section which the Opencast Activity episode module will be added to.';
$string['addcatalog'] = 'Add new metadata';
$string['addlti_settingavailability'] = 'Set series module availability';
$string['addlti_settingavailability_desc'] = 'If enabled, teachers can set the availability conditions when a new Opencast LTI series module is added to a course.';
$string['addlti_settingavailability_note'] = 'Please note: This feature is only available if availability is globally enabled on the {$a} admin setting page.';
$string['addlti_settingdefaulttitle'] = 'Default LTI series module title';
$string['addlti_settingdefaulttitle_desc'] = 'The default title to be used when a new Opencast LTI series module is added to a course.';
$string['addlti_settingenabled'] = 'Enable "Add LTI series module"';
$string['addlti_settingenabled_desc'] = 'If enabled, teachers can add an Opencast LTI series module to a course. This LTI series module will be pointing to the course\'s Opencast series.';
$string['addlti_settingintro'] = 'Add series module intro';
$string['addlti_settingintro_desc'] = 'If enabled, teachers can add an intro to the Opencast LTI series module. This intro will be shown on the course overview page.';
$string['addlti_settingpreconfiguredtool'] = 'Preconfigured LTI tool for series modules';
$string['addlti_settingpreconfiguredtool_desc'] = 'The preconfigured LTI tool to be used when a new Opencast LTI series module is added to a course.';
$string['addlti_settingpreconfiguredtool_notools'] = 'No preconfigured LTI tools to be used found. Please create an Opencast series LTI tool first on the {$a} admin setting page.';
$string['addlti_settingsection'] = 'Choose series module section';
$string['addlti_settingsection_desc'] = 'If enabled, teachers can choose the section which the Opencast LTI series module will be added to.';
$string['addltiepisode_settingavailability'] = 'Set episode module availability';
$string['addltiepisode_settingavailability_desc'] = 'If enabled, teachers can set the availability conditions when a new Opencast LTI episode module is added to a course.';
$string['addltiepisode_settingenabled'] = 'Enable "Add LTI episode module"';
$string['addltiepisode_settingenabled_desc'] = 'If enabled, teachers can add an Opencast LTI episode module to a course. This LTI episode module will be pointing to an Opencast episode.';
$string['addltiepisode_settingintro'] = 'Add episode module intro';
$string['addltiepisode_settingintro_desc'] = 'If enabled, teachers can add a intro to the Opencast LTI episode module. This intro will be shown on the course overview page.';
$string['addltiepisode_settingpreconfiguredtool'] = 'Preconfigured LTI tool for episode modules';
$string['addltiepisode_settingpreconfiguredtool_desc'] = 'The preconfigured LTI tool to be used when a new Opencast LTI episode module is added to a course.';
$string['addltiepisode_settingpreconfiguredtool_notools'] = 'No preconfigured LTI tools to be used found. Please create an Opencast episode LTI tool first on the {$a} admin setting page.';
$string['addltiepisode_settingsection'] = 'Choose episode module section';
$string['addltiepisode_settingsection_desc'] = 'If enabled, teachers can choose the section which the Opencast LTI episode module will be added to.';
$string['addnewcatalogfield'] = 'A new field has been added to metadata catalog.';
$string['addnewtranscription'] = 'Add new transcription';
$string['addnewtranscription_desc'] = 'Please select a service type in which your transcription should be represented, and then upload the file with requiured extensions.<br> NOTE: Uploading a new transcription with an already uploaded service type results in replacing that transcription, which might be useful for editing the current ones.';
$string['adhocfiledeletion'] = 'Delete videofile from moodle';
$string['adhocfiledeletiondesc'] = 'If activated the plugin tries to delete the videofile from moodle\'s filessystem right after it was uploaded to opencast server. Please note that the file will still remain in the file system, if it is used within other places in moodle.';
$string['allowdownloadtranscriptionsetting'] = 'Allow download transcriptions';
$string['allowdownloadtranscriptionsetting_desc'] = 'When enabled, the transcription download button will be displayed in the manage transcriptions page, by which teachers are able to download the transcription\'s file. <br><b>Notice:</b> In case you are using Opencast 13 or later, you need to make sure that all prerequisites including LTI features and permissions to access /assets/ endpoint for LTI users, are set correctly as it is mandatory to perform LTI call.';
$string['alloweduploadwfconfigs'] = 'Allowed upload workflow configurations';
$string['alloweduploadwfconfigsdesc'] = 'A comma separated list of allowed upload workflow configuration ids to be shown to the teachers in upload page, which already exist in the workflow configuration panel.<br />For example: straightToPublishing,whisper_de,vosk_en<br />NOTE: if empty, all elements in the workflow configuration panel such as input and select elements will be provided to the teachers.';
$string['allowunassign'] = 'Allow unassign from course';
$string['allowunassigndesc'] = 'Delete the assignment of a course series to control visibility in filepicker and course lists. This feature is only available, when it is possible to have events without series in opencast. Please ask the admistrator of the opencast system before activating this.';
$string['appearance_overview_settingshowenddate'] = 'Show end date';
$string['appearance_overview_settingshowenddate_desc'] = 'If enabled, the table of available videos on the overview page will contain a column which shows the end date of the Opencast episode.';
$string['appearance_overview_settingshowlocation'] = 'Show location';
$string['appearance_overview_settingshowlocation_desc'] = 'If enabled, the table of available videos on the overview page will contain a column which shows the location of the Opencast episode.';
$string['appearance_overview_settingshowpublicationchannels'] = 'Show publication channels';
$string['appearance_overview_settingshowpublicationchannels_desc'] = 'If enabled, the table of available videos on the overview page will contain a column which shows the publication channel of the Opencast episode. The same information will also be given on the Opencast episode deletion page.';
$string['batchupload_emptyvideosuploaderror'] = 'You must upload at least one presenter video file.';
$string['batchupload_filemanager_presenter_title'] = 'Presenter videos';
$string['batchupload_metadata_desc'] = 'By uploading a batch of videos to Opencast at once, the following metadata will be set for each video.';
$string['batchupload_metadata_header'] = 'Batch Metadata';
$string['batchupload_setting'] = 'Enable batch video upload';
$string['batchupload_setting_desc'] = 'By enabling this option, the Opencast instance will provide a separate page to the users to upload videos in batch at once. Please note that the local_chunkupload plugin does not work in this upload mode. This means that the file size is limited based on your settings.<br /> To avoid cluttering the upload job queue up as well as decreasing the upload process time, it is recommended to increase the "Limit upload job by cron".<br /> To avoid any timeout error during video uploads, it is recommended to adjust timeout options in the following settings according to your needs: <br /> {$a->uploadtimeoutlink} <br /> {$a->toolopencastinstancelink} ';
$string['batchupload_visibility_desc'] = 'The batch visibility setting will be applied for each uploaded video in the batch.';
$string['batchupload_visibility_header'] = 'Batch Visibility';
$string['batchuploadexplanation'] = 'In this section you are able to upload multiple files at once. <br /> NOTE: Please keep in mind that the batch video upload is only available for presenter flavors.';
$string['cachevalidtime'] = 'Cache valid time';
$string['cachevalidtime_desc'] = 'Time in seconds, before the cache for the video data of each course is refreshed.';
$string['catalog_params_noarray'] = "Parameters have to be either empty or a JSON representation of an array or an object.";
$string['dcmitermsnotice'] = '<br /><strong>IMPORTANT</strong>: Opencast supports standardized Dublin Core metadata set, therefore all metadata fields should follow DCMI terms, otherwise attempting to add unknown metadata field will result in error.<br /> You can check the list of all available terms to use in <a target="_blank" href="https://www.dublincore.org/specifications/dublin-core/dcmi-terms/">DCMI Metadata Terms</a>.';
$string['delete_confirm_metadata'] = 'Are you sure you want to delete this metadata field?';
$string['delete_metadata'] = 'Delete metadata field';
$string['deletedraft'] = 'Delete a video before transfer to Opencast';
$string['deletedraftdesc'] = 'You are about to delete this video before the transfer to Opencast.<br />It will be removed from the transfer queue and will not be processed. Please do not continue unless you are absolutely sure.';
$string['deleteevent'] = 'Delete an event in Opencast';
$string['deleteevent_massaction'] = 'Delete selected video(s) in Opencast';
$string['deleteevent_massaction_notification_failed'] = 'Failed to delete the following videos: <br><ul><li>{$a}</li></ul>';
$string['deleteevent_massaction_notification_nochange'] = 'Unable to delete any video due to missing video identifier.';
$string['deleteevent_massaction_notification_success'] = 'The following selected video will be deleted shortly: <br><ul><li>{$a}</li></ul>';
$string['deleteeventdesc'] = 'You are about to delete this video permanently and irreversibly from Opencast.<br />All embedded links to it will become invalid. Please do not continue unless you are absolutely sure.';
$string['deletegroupacldesc'] = 'You are about to delete the access to this video from this course.<br />If the access is deleted, the video is not displayed in filepicker and in the list of available videos. This does not affect videos, which are already embedded.<br />The video will not be deleted in Opencast.';
$string['deletetranscription'] = 'Delete transcription';
$string['deletetranscription_desc'] = 'You are about to delete the transcription.<br>Are you sure you would like to delete it?';
$string['deletetranscriptionworkflow'] = 'Workflow for delete transcription';
$string['deletetranscriptionworkflow_desc'] = 'This workflow is triggered when a transcription is deleted, it is required to provide deletion feature in order for event to be processed correctly.<br>NOTE: If empty, the feature will be disabled.';
$string['deleteworkflow'] = 'Workflow to start before event is be deleted';
$string['deleteworkflowdesc'] = 'Before deleting a video, a workflow can be defined, which is called to retract the event from all publication channels.';
$string['descriptionmdbatchable_help'] = 'When enabled, the metadata field can be set for batch video upload.';
$string['descriptionmdfd'] = 'Field Description';
$string['descriptionmdfd_help'] = 'The content of this field is presented as a help icon near the metadata field.';
$string['descriptionmdfn'] = 'Field name';
$string['descriptionmdfn_help'] = 'This is the actual field name passing as metadata (id); the presented name according to this field name should be set in language string.';
$string['directaccess_setting'] = 'Direct access channel';
$string['directaccess_settingdesc'] = 'Opencast publication channel from which the videos are served when accessing them directly. Leaving this option empty will disable the feature.<br/><strong>Notice:</strong> It is recommended to take further caution using this feature, since it reveals the direct video data on the Opencast server upon accessing the link.';
$string['dodeletedraft'] = 'Delete video before transfer to Opencast';
$string['dodeleteevent'] = 'Delete video permanently';
$string['download_setting'] = 'Download channel';
$string['download_settingdesc'] = 'Opencast publication channel from which the videos are served when downloading them.';
$string['download_settingheader'] = 'Download videos';
$string['duplicateworkflow'] = 'Workflow for duplicating events';
$string['duplicateworkflowdesc'] = 'This workflow is needed for importing opencast events from one course into another. If not set, it is not possible to import Opencast events.';
$string['editorbaseurl'] = 'Opencast Editor Base URL';
$string['editorbaseurl_desc'] = 'The base URL to be used to call the Opencast Editor, the base url of the opencast instance is used if empty.';
$string['editorendpointurl'] = 'Opencast Editor Endpoint';
$string['editorendpointurl_desc'] = 'The editor endpoint to access the editor. The mediapackage ID will be added at the end of the url.';
$string['emptyvideouploaderror'] = 'You must either upload a presenter video or a presentation video file.';
$string['enablechunkupload'] = 'Enable Chunkupload';
$string['enablechunkupload_desc'] = 'If Chunkupload is enabled it will be possible to upload videos using the chunkupload plugin';
$string['enableopencasteditorlink'] = 'Show the link to opencast Editor in action menu';
$string['enableopencasteditorlink_desc'] = 'This option renders a button to opencast editor in the block content and the block overview. The following settings as well lti credentials have to be configured as well.';
$string['enableopencaststudiolink'] = 'Show the link to opencast studio';
$string['enableopencaststudiolink_desc'] = 'This option renders a button to opencast studio in the block content and the block overview. Opencast studio has to run on your opencast admin node and the following lti settings have to be configured as well.';
$string['enableopencaststudioreturnbtn'] = 'Show a redirect back button in Studio';
$string['enableopencaststudioreturnbtn_desc'] = 'When enabled, Studio then renders an additional button "Exit and go back" after up- or downloading the recording.';
$string['enableschedulingchangevisibility'] = 'Schedule a visibility change';
$string['enableschedulingchangevisibility_massaction'] = 'Schedule a visibility change for the selected video(s)';
$string['enableschedulingchangevisibilitydesc'] = 'Set a date and a visibility status for the event in future, which will be performed using a scheduled task.';
$string['enableschedulingchangevisibilitydesc_massaction'] = 'Set a date and a visibility status for the selected video(s) in future, which will be performed using a scheduled task.';
$string['enableuploadwfconfigpanel'] = 'Show workflow configurations during upload';
$string['enableuploadwfconfigpaneldesc'] = 'If activated, the configuration panel of the upload workflow will is shown to the teachers during uplaod video in the upload page. With this feature teachers are able to decide further processing options or input values during upload process in Opencast depending on the workflow structure.';
$string['engageurl'] = 'URL of the Opencast Engage server';
$string['engageurl_desc'] = 'If empty, the video titles in the overview are not linked to the engage player.';
$string['error_workflow_not_exists'] = 'The workflow {$a->duplicateworkflow} can not be found in the opencast system. The event ({$a->eventid}) could not be restored for course {$a->coursefullname} (ID: {$a->courseid}).';
$string['errorrestoremissingimportmode_body'] = 'There was a problem in the restore process of the course {$a->coursefullname} (ID: {$a->courseid}). Import mode could not be identified, therefore restore task has failed.';
$string['errorrestoremissingimportmode_subj'] = 'Opencast error during restore process';
$string['faileduploadretrylimit'] = 'Limit failed upload attempts';
$string['faileduploadretrylimitdesc'] = 'Each upload job will be archived once the maximum number of failed attempts is reached. When a job is archived, teachers must decide whether to delete it or manually re-queue it. <br/>The uploader will always be notified. If the "event status notification" option ("eventstatusnotificationenabled") is enabled, other teachers in the course will also be informed about the archived status. <br/><strong>NOTE:</strong> A value of 0 (default) or leaving the field empty means there is no limit.';
$string['groupcreation'] = 'Create a group';
$string['groupcreationdesc'] = 'If checked, a group is created during the upload.';
$string['groupname'] = 'Group name';
$string['groupnamedesc'] = 'Group to which the video is added. Important: The group name length is restricted to 128 Bytes. You can use the placeholders [COURSEID] and [COURSENAME] which are automatically replaced.';
$string['importmode'] = 'Import mode';
$string['importmodedesc'] = 'In order to define an approach to import videos into a course, a mode should be seleted. The default mode is Duplicating Events in which a new series would be created and events will be avaible in the series by using a dupliaction workflow. <br /> ACL Change approach on the other hand will use the same seriesid among courses but series and events\' ACLs are changes to grant access from the course which imports the videos.<br /><strong>NOTE:</strong> At the moment, the selection of events in import wizards (course and manual) for "ACL Change" is NOT possible, due to avoiding further complications in terms of permissions in Opencast.';
$string['importvideos_settingcoredefaultvalue'] = 'Default value for opencast import videos\' checkbox';
$string['importvideos_settingcoredefaultvalue_desc'] = 'Selecting a default value for the checkbox to include opencast videos in <b>Moodle core import wizard</b> which at the end will be used to whether include or not to include videos. This option is meant to help teachers who prefer to use "Jump to final step" button and skip the Moodle core import wizard steps.';
$string['importvideos_settingcoredefaultvalue_false'] = 'Unchecked';
$string['importvideos_settingcoredefaultvalue_true'] = 'Checked';
$string['importvideos_settingcoreenabled'] = 'Allow video import within Moodle core course import wizard';
$string['importvideos_settingcoreenabled_desc'] = 'If enabled, teachers can import existing video files from other Moodle courses to their Moodle course by using the Moodle core course import wizard. Within the wizard, there is an additional option shown to import the videos which have been uploaded within the Opencast block in the other course. Using this feature, the teacher can import all videos from another course as bulk, but he cannot select individual videos.<br />When Dupliacting Events is selected as the Import mode then the videos are duplicated in Opencast by an ad-hoc task in Moodle and will show up in the course\'s video list with a short delay.<br />In case of ACL Change as Import mode, the seriesid of the course being imported is used but the ACL of the series and its videos will be changed in order to grant access within the new course.<br /><strong>NOTE:</strong> With "ACL Change" import mode, the selection of videos in the wizard is not provided.';
$string['importvideos_settingenabled'] = 'Allow video import';
$string['importvideos_settingenabled_desc'] = 'If enabled, teachers can import existing video files from other Moodle courses to their Moodle course. You have to further select an import mode between Duplicating Events or ACL Change approach. In both modes, you need to enable one or both of the two following settings to manually import videos or to import videos within the Moodle core course import wizard. If you don\'t enable any of these, this setting will have no effect.<br />In Duplicating Events mode, you need to further set a duplication workflow.';
$string['importvideos_settinghandleepisodeenabled'] = 'Handle Opencast episode modules during manual video import';
$string['importvideos_settinghandleepisodeenabled_desc'] = 'If enabled, teachers can handle Opencast episode modules which were created with the "Add LTI episode module" feature and which relate to the videos which are imported. This especially cleans up modules which have been imported from one course to another course but which still link to videos in the old course. The episode modules are handled by an ad-hoc task in Moodle and will be fixed in the course with a short delay.<br />Please note that this mechanism relies on the fact that the Opencast duplication workflow sets a workflow instance configuration field \'duplicate_media_package_1_id\' which contains the episode ID of the duplicated episode. If the workflow does not set this configuration field, this feature will always fail.';
$string['importvideos_settinghandleseriesenabled'] = 'Handle Opencast series modules during manual video import';
$string['importvideos_settinghandleseriesenabled_desc'] = 'If enabled, teachers can handle Opencast series modules which were created with the "Add LTI series module" feature and which relate to the videos which are imported. This especially cleans up modules which have been imported from one course to another course but which still link to the course series of the old course. The series module is instantly handled after the import wizard is finished.';
$string['importvideos_settingmanualenabled'] = 'Allow manual video import';
$string['importvideos_settingmanualenabled_desc'] = 'If enabled, teachers can import existing video files from other Moodle courses to their Moodle course by using a dedicated Opencast video import wizard. This feature is offered on the Opencast block overview page.<br /> In Duplicating Events import mode, the teacher can import all or a subset of videos from another course as bulk. The videos which are selected within the import wizard are duplicated in Opencast by an ad-hoc task in Moodle and will show up in the course\'s video list with a short delay.<br />In ACL Change import mode, the seriesid of the the target course will be used in the new course. Additionally, the ACLs of the series itself and all of its videos will be changed in order to grant access to them within the new course.<br />Unlike in Duplicating Events Mode, there is no manual selection of videos available within the provided wizard.<br />Please note that there are corresponding capabilities block/opencast:manualimporttarget and block/opencast:manualimportsource for this feature which control who can import which courses to which courses. By default, managers and editing teachers have this capability and can use the feature as soon as it is enabled here.<br /><strong>NOTE:</strong> With "ACL Change" import mode, the selection of videos in the wizard is not provided.';
$string['ingestupload'] = 'Ingest upload';
$string['ingestuploaddesc'] = 'Use the Opencast ingest service for uploading videos.';
$string['invalidmetadatafield'] = 'Invalid metadata field found: {$a}';
$string['legenddeletingdesc'] = 'The video is being deleted, and it will be removed shortly.';
$string['legendocstatecapturingdesc'] = 'Live capturing in progress.';
$string['legendocstatefaileddesc'] = 'Something went wrong while processing this video, and it has failed. Please contact the support/administrator in order to resolve this issue.';
$string['legendocstateneedscuttingdesc'] = 'The Video requires further attention in order to finish the processing stage.';
$string['legendocstateprocessingdesc'] = 'The video is uploaded, and it is being processed by Opencast.';
$string['legendocstatesucceededdesc'] = 'The video has been processed and it is ready.';
$string['legendplanneddesc'] = 'The video has been scheduled for processing.';
$string['legendvisibility_group'] = 'Group Visibility';
$string['legendvisibility_groupdesc'] = 'The video is visible to all student belonging to selected groups.';
$string['legendvisibility_hidden'] = 'Hidden';
$string['legendvisibility_hiddendesc'] = 'The video is not visible to any student.';
$string['legendvisibility_mixed'] = 'Invalid';
$string['legendvisibility_mixeddesc'] = 'The visibility of the video is in an invalid status.';
$string['legendvisibility_visible'] = 'Visible';
$string['legendvisibility_visibledesc'] = 'The video is visible to all students of the course.';
$string['limituploadjobs'] = 'Limit upload job by cron';
$string['limituploadjobsdesc'] = 'Limit the count of uploadjobs done by one cronjob. The cronjob can be scheduled here: {$a}';
$string['limitvideos'] = 'Number of videos';
$string['limitvideosdesc'] = 'Maximum number of videos to display in block';
$string['liveupdate_reloadtimeout'] = 'Page reload timeout (in seconds)';
$string['liveupdate_reloadtimeout_desc'] = 'The timeout in seconds by which the page will be reloaded, when there is an updated status identified. If empty or less than 0, a default value of 3 seconds will be considered.<br>NOTE: Before reloading the page a teachers will be notified. The reload is important, so that every required backend process take place.';
$string['liveupdate_settingenabled'] = 'Enable live status update feature';
$string['liveupdate_settingenabled_desc'] = 'When enabled, uploading status and workflow processing states will be watched when they are in an ongoing process,<br>This is done by pulling the status information for those processes in a 1 second interval.';
$string['managedefaultredirectlinkwithexp'] = 'You can add default values for these metadata fields, using: ';
$string['managedefaultsforuser'] = 'Manage default values';
$string['managedefaultsforuser_desc'] = 'Here you can manage default values for metadata fields used to add videos as well create new series. If you add a default value for a field here, it will be automatically inserted into the field as predefined value (default) inside those mentioned pages.<br />NOTE: In case this page is empty, or you are looking for a field that does not exist here, please contact your system administrator and ask him/her to configure the metadata fields as defaultable.';
$string['maxseries'] = 'Maximum number of series';
$string['maxseriesdesc'] = 'Specifies how many series can be assigned to a course. Teachers won\'t be able to add/import more series if the maximum number is reached.';
$string['maxseriesreached'] = 'You cannot add another series to this course because the course contains already the maximum number of series.';
$string['maxseriesreachedimport'] = 'Currently, you cannot import another series because the course contains already the maximum number of series.';
$string['maxtranscriptionupload'] = 'Maximum number of sets to upload';
$string['maxtranscriptionupload_desc'] = 'Specify how many transcription box should be provided to teachers to upload. In case it is not correctly set, only 1 field set will be provided.';
$string['metadata'] = 'Event Metadata';
$string['metadata_autocomplete_noselectionstring'] = 'No {$a} provided!';
$string['metadata_autocomplete_placeholder'] = 'Enter {$a}';
$string['metadatadesc'] = 'Here you can define which metadata fields can or have to be set when uploading videos to Opencast. You can drag-and-drop rows to reorder them defining the position of fields in the form.';
$string['metadataexplanation'] = 'When uploading existing video files to Opencast, you can set several metadata fields. These will be stored together with the video.';
$string['metadataseries'] = 'Series Metadata';
$string['metadataseriesdesc'] = 'Here you can define which metadata fields can or have to be set for creating Opencast series. You can drag-and-drop rows to reorder them defining the position of fields in the form.';
$string['metadataseriesupdatefailed'] = 'Updating the series metadata failed.';
$string['notificationeventstatus'] = 'Allow event process status notification';
$string['notificationeventstatus_body'] = 'The process status of the uploaded video: {$a->videotitle} (ID: {$a->videoidentifier}) in the course: {$a->coursefullname} (ID: {$a->courseid}) has been changed to: {$a->statusmessage}';
$string['notificationeventstatus_desc'] = 'This option allows the system to send notification about the status of the uploaded video from Opencast during the process to the users. This option only includes uploader of the video into the user list. To Notify all teachers of the course, the following setting should be enabled.<br />This feature is done through a scheduled task that is recommended to run every minute.';
$string['notificationeventstatus_subj'] = 'Opencast Event Status Notification';
$string['notificationeventstatusdeletion'] = 'Cleanup notification jobs after (Days)';
$string['notificationeventstatusdeletion_desc'] = 'This setting sets a deadline in day for the jobs that are not yet completed. After the deadline has reached, the job will be deleted despite its process state. <br />This features helps to remove the pending notification jobs from the list and it is done through a scheduled task that is recommended to run once a day.<br />NOTE: (zero) "0" value disables the setting.';
$string['notificationeventstatusteachers'] = 'Notify all course teachers about the event process status';
$string['notificationeventstatusteachers_desc'] = 'With this option, apart from the uploader of the video, all the teachers of the course where the video is uploaded from get notified about the Opencast processing status.';
$string['offerchunkuploadalternative'] = 'Offer filepicker as alternative';
$string['offerchunkuploadalternative_desc'] = 'If this option is enabled, a checkbox labeled as \'{$a}\' will be shown below the chunk upload widget. As soon as this checkbox is checked, the chunk upload widget is hidden and the Moodle default file picker is shown, giving access to all Moodle repositories.';
$string['opencast:deleteevent'] = 'Finally delete a video (event) in opencast';
$string['opencaststudiobaseurl'] = 'Opencast Studio Base URL';
$string['opencaststudiobaseurl_desc'] = 'The base URL to be used to call Opencast studio. The base URL of the opencast instance is used if empty.';
$string['opencaststudiocustomsettingsfilename'] = 'Custom Studio settings filename';
$string['opencaststudiocustomsettingsfilename_desc'] = 'This custom settings filename will be appended to the query when redirecting to Studio, afterwards the Studio looks for this filename relative to its directory and read its settings from that file.<br><b>NOTE</b>: Requires Opencast 14.2 or later.';
$string['opencaststudionewtab'] = 'Redirect to Studio in a new tab';
$string['opencaststudionewtab_desc'] = 'When enabled, studio opens in a new tab.';
$string['opencaststudioreturnbtnlabel'] = 'Label for Studio\'s return button';
$string['opencaststudioreturnbtnlabel_desc'] = 'This label works as a short description where the return link leads to. This label will be appended to the Studio return button text, when empty, moodle site name will be passed as label.';
$string['opencaststudioreturnurl'] = 'Custom Studio return endpoint URL';
$string['opencaststudioreturnurl_desc'] = 'When empty the return url redirects back to the same Moodle opencast block overview where the request comes from. A custom endpoint URL will then be passed to Studio as return url when configured, in this case, admin is able to use 2 placeholders including [OCINSTANCEID] and [COURSEID]. Please NOTE: the URL must be relative to wwwroot.';
$string['presentation'] = 'Presentation video';
$string['presentationdesc'] = 'Use the presentation video if you have a video file of a slide presentation recording or a screencast.';
$string['presentationfile'] = 'Presentation file';
$string['presenter'] = 'Presenter video';
$string['presenterdesc'] = 'Use the presenter video if you have a video file of a person speaking to an audience or a motion picture.';
$string['presenterfile'] = 'Presenter file';
$string['privacy:metadata:block_opencast_uploadjob'] = 'Information about video uploads.';
$string['privacy:metadata:block_opencast_uploadjob:courseid'] = 'ID of the course where the video is uploaded';
$string['privacy:metadata:block_opencast_uploadjob:fileid'] = 'ID of the file/video which is uploaded';
$string['privacy:metadata:block_opencast_uploadjob:opencasteventid'] = 'ID of the opencast event that was created during upload';
$string['privacy:metadata:block_opencast_uploadjob:status'] = 'Status of upload process';
$string['privacy:metadata:block_opencast_uploadjob:timecreated'] = 'The date the upload job was created.';
$string['privacy:metadata:block_opencast_uploadjob:timemodified'] = 'The date the upload job was last modified.';
$string['privacy:metadata:block_opencast_uploadjob:userid'] = 'ID of the user who uploaded the video';
$string['privacy:metadata:core_files'] = 'The opencast block stores files (videos) which have been uploaded by the user.';
$string['privacy:metadata:opencast'] = 'The block interacts with an opencast instance and thus data needs to be exchanged.';
$string['privacy:metadata:opencast:file'] = 'The file which is selected is uploaded to opencast.';
$string['publishtoengage'] = 'Publish to Engage';
$string['publishtoengagedesc'] = 'Select this option to publish the video after upload to engage player. Setup workflow must support this.';
$string['reuseexistingupload'] = 'Reuse existing uploads';
$string['reuseexistinguploaddesc'] = 'If activated, multiple videos with the same content hash are uploaded to opencast only once. This saves storage and processing power, but it might cause problems, when you use specific access policies based on opencast series.';
$string['seriesname'] = 'Series name';
$string['seriesnamedesc'] = 'Series to which the video is added. You can use placeholders which are automatically replaced (<a target="_blank" href="https://moodle.docs.opencast.org/#block/general_settings/#placeholders">list of placeholders</a>).';
$string['support_setting'] = 'Support email';
$string['support_setting_notset'] = 'Support email is not set. Please contact the administrator and resubmit the report.';
$string['support_settingdesc'] = 'Email address to which reports are sent if users report problems with videos.';
$string['swprivacynotice_settinginfotext'] = 'Workflow Privacy Notice Info Text';
$string['swprivacynotice_settinginfotext_desc'] = 'This input is used to provide information about privacy notice for workflows in start workflow dialog.<br><strong>NOTE:</strong> If empty, no notice will be displayed.';
$string['swprivacynotice_settingtitle'] = 'Workflow Privacy Notice Title';
$string['swprivacynotice_settingtitle_desc'] = 'A title to be displayed in start workflow dialog. It is intended to be configurable in order to be adjusted by the users. When empty, default string is used.';
$string['swprivacynotice_settingwfds'] = 'Workflows Definition List';
$string['swprivacynotice_settingwfds_desc'] = 'A comma separated list of workflow definitions, by which the privacy notice is displayed. When empty, the privacy notice will be displayed for all workflows.';
$string['termsofuse'] = 'Terms of use';
$string['termsofuse_accept'] = 'I have read and agree to the {$a}.';
$string['termsofuse_accept_toggle'] = 'terms of use';
$string['termsofuse_desc'] = 'If you enter some text, a checkbox with the terms of use will appear on the "Video upload" page. The users must accept the entered terms of use before they can upload the video.';
$string['transcriptionfileextensions'] = 'Allowed transcription file extensions';
$string['transcriptionfileextensions_desc'] = 'Comma separated list of allowed transcription file extensions (extensions must exist in Moodle\'s <a href="{$a}">File types</a> list). If left blank all extensions with type \'HTML track files\' are allowed (again see <a href="{$a}">File types</a>).';
$string['transcriptionflavors'] = 'Transcription Service Types (Flavors)';
$string['transcriptionflavors_desc'] = 'These service type (flavors) will be presented as a select (dropdown) options to select from when uploading transcriptions. It is a key-value pair of information by which the keys are consumed by opencast and values are human readable information that describe the type of transcription service.<br><b>(Multi-Language filters)</b> In order for each value of <i>Drop Down (select)</i> to get translated using filters such as <a target="_blank" href="https://moodle.org/plugins/filter_multilang2">Multi-Language Content (v2)</a>, each value should contain the placeholder, defined by that filter i.e. "{mlang en}Amberscript German{mlang}{mlang de}Amberscript Deutsch{mlang}"';
$string['transcriptionworkflow'] = 'Workflow for transcription (speech to text)';
$string['transcriptionworkflow_desc'] = 'This workflow is triggered when transcription files are attached to the video. If not set, uploading and managing transcriptions is not provided.<br>By setting this workflow, a new section to upload transcription files in the add video page as well as a new action menu item in overview page is provided, to upload/handle the new/current transcriptions files.';
$string['unabletoaddnewtranscription'] = 'Unable to add new transcription';
$string['unabletodeletetranscription'] = 'Unable to delete transcription';
$string['updatemetadata'] = 'Update metadata for this event';
$string['updatemetadata_massaction'] = 'Update metadata for selected video(s)';
$string['updatemetadata_massaction_emptyformsubmission'] = 'At least one field must be enabled.';
$string['updatemetadata_massaction_notification_failed'] = 'Unable to update metadata for the following video(s): <br><ul><li>{$a}</li></ul>';
$string['updatemetadata_massaction_notification_nochange'] = 'No changes were made regarding metadata update for the selected video(s).';
$string['updatemetadata_massaction_notification_succeeded'] = 'The metadata of the selected video(s) has been successfully updated: <br><ul><li>{$a}</li></ul>';
$string['updatemetadata_massaction_videoerror'] = 'Update metadata for the video ({$a->title}) is not possible at the moment due to: {$a->error}';
$string['updatemetadata_short'] = 'Update metadata';
$string['updatemetadatafailed'] = 'The metadata could not be saved.';
$string['updatemetadatasaved'] = 'Metadata is saved.';
$string['uploadexplanation'] = 'You have the option to upload a presenter video file and / or a presentation video file.<br />Most likely you will only upload one file, but Opencast is also capable of dealing with two videos at once which will be combined in a media package.';
$string['uploadfileextensions'] = 'Allowed file extensions';
$string['uploadfileextensionsdesc'] = 'Comma separated list of allowed video file extensions (extensions must exist in Moodle\'s <a href="{$a}">File types</a> list). If left blank all extensions with type group \'video\' are allowed (again see <a href="{$a}">File types</a>).';
$string['uploadfilelimit'] = 'Video size limit';
$string['uploadfilelimitdesc'] = 'Limit the file size of uploaded videos through the chunkupload.';
$string['uploadtimeout'] = 'Moodle to Opencast upload timeout';
$string['uploadtimeoutdesc'] = 'Configure the time in seconds a single video upload may take during the background uploading task.';
$string['uploadworkflow'] = 'Workflow to start after upload';
$string['uploadworkflowdesc'] = 'Setup the unique shortname of the workflow, that should be started after succesfully uploading a video file to opencast. If left blank the standard workflow (ng-schedule-and-upload) will be used. Ask for additional workflows that may have been created by the opencast administrator.';
$string['videostable_massaction_updatemetadata'] = 'Update metadata';
$string['videostable_massaction_updatemetadata_modal_body'] = 'Are you sure you want to update the metadata of the following selected videos:<br> <ul><li>{$a}</li></ul>';
$string['videostable_massaction_updatemetadata_modal_title'] = 'Update metadata of selected videos';
$string['workflownotdefined'] = 'The workflow for updating metadata is not defined.';
$string['workflowrolesdesc'] = 'This workflow is triggered when updating event metadata or deleting/adding nonpermanent ACL rules. If not set, it will not be possible to change the visibility of uploaded videos through the block.';
$string['workflowrolesname'] = 'Workflow for updating metadata';
$string['workflowtags_setting'] = 'Workflow tags';
$string['workflowtags_settingdesc'] = 'Comma separated list of tags for Opencast workflows that can be configured by the admin and manually started by teachers.';

$string['catalogparam'] = 'Parameters in JSON-Format';
$string['catalogparam_help'] = '<b>JSON format:</b> {"param1":"value1", "param2":"value2"}<br><b>String (text), Long Text (textarea):</b> Parameters will be defined as attributes of the element. i.e. {"style":"min-width: 27ch;"} which defines the element´s style attribute <br><b>Drop Down (select):</b> Parameters will be defined as options of the select element. i.e. {"en": "English", "de": "German"} which takes the left side as value and right side as text to show.<b>(Multi-Language filters)</b> In order for each value of <i>Drop Down (select)</i> to get translated using filters such as <a target="_blank" href="https://moodle.org/plugins/filter_multilang2">Multi-Language Content (v2)</a>, each value should contain the placeholder, defined by that filter i.e. "{mlang en}No option selected{mlang}{mlang de}Keine Option ausgewählt{mlang}" or "{mlang en}English{mlang}{mlang de}Englisch{mlang}"<br><b>Arrays (autocomplete):</b> Parameters will be defined as <a target="_blank" href="https://docs.moodle.org/dev/lib/formslib.php_Form_Definition#autocomplete">suggestions</a>. i.e. {"1": "Dr. Doe", "2": "Johnson"} which shows (Dr. Doe and Johnson) as suggestions<br><b>Date Time Selector (datetime):</b> Parameters will be defined as <a target="_blank" href="https://docs.moodle.org/dev/lib/formslib.php_Form_Definition#date_selector">date_selector variables</a> . i.e. {"startyear": "1990", "stopyear": "2020"} which defines date range to be selected between 1990 - 2020';
$string['descriptionmdbatchable'] = 'Batchable';
$string['descriptionmdbatchable_help'] = 'When enabled, the metadata field can be set for batch video upload.';
$string['descriptionmddefaultable'] = 'Defaultable';
$string['descriptionmddefaultable_help'] = 'When enabled, users can add default value for this field.';
$string['descriptionmdreadonly'] = 'Readonly';
$string['descriptionmdreadonly_help'] = 'Please note that, if a field is set to be required, the readonly option will be disabled. That means a field can only be readonly or required at a time.';

$string['heading_actions'] = 'Actions';
$string['heading_batchable'] = 'Batchable';
$string['heading_datatype'] = 'Field Type';
$string['heading_defaultable'] = 'Defaultable';
$string['heading_delete'] = 'Delete';
$string['heading_description'] = 'Field Description';
$string['heading_lti'] = 'Setting for LTI Configuration';
$string['heading_name'] = 'Field Name';
$string['heading_params'] = 'Parameters (JSON)';
$string['heading_permanent'] = 'Permanent';
$string['heading_position'] = 'Position';
$string['heading_readonly'] = 'Read Only';
$string['heading_required'] = 'Required';
$string['delete_role'] = 'Delete role';
$string['delete_confirm_role'] = 'Are you sure you want to delete this role?';
$string['transcription_flavor_confirm_delete'] = 'Are you sure you want to delete this flavor option pair?';
$string['transcription_flavor_delete'] = 'Delete flavor\'s option pair';
$string['transcription_flavor_key'] = 'Flavor key';
$string['transcription_flavor_value'] = 'Flavor value';
$string['transcriptionaction_thead'] = 'Actions';
$string['readonly_disabled_tooltip_text'] = 'Unable to set readonly option while it is set to be required.';
