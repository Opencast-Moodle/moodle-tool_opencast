{"version":3,"file":"tool_settings.min.js","sources":["../src/tool_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast tool settings.\n *\n * @module     tool_opencast/tool_settings\n * @copyright  2021 Tamara Gunkel, University of MÃ¼nster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Tabulator from 'tool_opencast/tabulator';\nimport $ from 'jquery';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as str from 'core/str';\nimport Notification from \"core/notification\";\n\n/* eslint-disable no-console */\n\n\nexport const init_general_settings = (rolesinputid, metadatainputid, metadataseriesinputid, ocinstanceid) => {\n\n    console.log(\"Hello WOrld\");\n\n    // Load strings\n    var strings = [\n        {key: 'name', component: 'tool_opencast'},\n        {key: 'isvisible', component: 'tool_opencast'},\n        {key: 'addinstance', component: 'tool_opencast'},\n        {key: 'delete_instance', component: 'tool_opencast'},\n        {key: 'delete_instance_confirm', component: 'tool_opencast'},\n        {key: 'delete', component: 'moodle'},\n        {key: 'isdefault', component: 'tool_opencast'},\n        {key: 'heading_role', component: 'tool_opencast'},\n        {key: 'heading_actions', component: 'tool_opencast'},\n        {key: 'heading_permanent', component: 'tool_opencast'},\n        {key: 'delete_role', component: 'tool_opencast'},\n        {key: 'delete_confirm_role', component: 'tool_opencast'},\n        {key: 'delete_metadata', component: 'tool_opencast'},\n        {key: 'delete_confirm_metadata', component: 'tool_opencast'},\n        {key: 'heading_name', component: 'tool_opencast'},\n        {key: 'heading_datatype', component: 'tool_opencast'},\n        {key: 'heading_description', component: 'tool_opencast'},\n        {key: 'heading_required', component: 'tool_opencast'},\n        {key: 'heading_readonly', component: 'tool_opencast'},\n        {key: 'heading_params', component: 'tool_opencast'},\n        {key: 'heading_defaultable', component: 'tool_opencast'},\n        {key: 'transcription_flavor_key', component: 'tool_opencast'},\n        {key: 'transcription_flavor_value', component: 'tool_opencast'},\n        {key: 'transcription_flavor_delete', component: 'tool_opencast'},\n        {key: 'transcription_flavor_confirm_delete', component: 'tool_opencast'},\n        {key: 'readonly_disabled_tooltip_text', component: 'tool_opencast'},\n        {key: 'heading_batchable', component: 'tool_opencast'},\n    ];\n    str.get_strings(strings).then(function(jsstrings) {\n\n        // Style hidden input.\n        console.log('rolesinputid:', rolesinputid);  // Logs the full object\n\n        var rolesinput = $('#' + rolesinputid);\n\n        console.log('rolesinput:', rolesinput);  // Logs the full object\n        console.log('rolesinput: ' + JSON.stringify(rolesinput, null, 2));\n        console.log('rolesinput val:', rolesinput.val());  // Logs the full object\n\n\n        rolesinput.parent().hide();\n        rolesinput.parent().next().hide(); // Default value.\n\n        // Don't create tables if they are not visible.\n        if (!rolesinput.length) {\n            return;\n        }\n\n        var metadatainput = $('#' + metadatainputid);\n        metadatainput.parent().hide();\n        metadatainput.parent().next().hide(); // Default value.\n\n        var metadataseriesinput = $('#' + metadataseriesinputid);\n        metadataseriesinput.parent().hide();\n        metadataseriesinput.parent().next().hide(); // Default value.\n\n        var rolestable = new Tabulator(\"#rolestable_\" + ocinstanceid, {\n            data: JSON.parse(rolesinput.val()),\n            layout: \"fitColumns\",\n            dataChanged: function(data) {\n                data = data.filter(value => value.rolename);\n                rolesinput.val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[0], field: \"rolename\", editor: \"input\", widthGrow: 4, cellEdited: function(cell) {\n                        if (cell.getData().rolename.includes('[USERNAME]') || cell.getData().rolename.includes('[USERNAME_LOW]') ||\n                            cell.getData().rolename.includes('[USERNAME_UP]')) {\n                            // Tick permanent checkbox.\n                            cell.getRow().update({'permanent': 1});\n                            cell.getRow().getCell(\"permanent\").getElement().getElementsByTagName(\"input\")[0].disabled = true;\n                        } else {\n                            cell.getRow().getCell(\"permanent\").getElement().getElementsByTagName(\"input\")[0].disabled = false;\n                        }\n                    }\n                },\n                {title: jsstrings[1], field: \"actions\", editor: \"input\", widthGrow: 1},\n                {\n                    title: jsstrings[2],\n                    field: \"permanent\",\n                    hozAlign: \"center\",\n                    widthGrow: 0,\n                    formatter: function(cell) {\n                        var input = document.createElement('input');\n                        input.type = 'checkbox';\n                        input.style.cursor = 'pointer';\n                        input.checked = cell.getValue();\n                        input.addEventListener('click', function() {\n                            cell.getRow().update({'permanent': $(this).prop('checked') ? 1 : 0});\n                        });\n\n                        if (cell.getData().rolename.includes('[USERNAME]') || cell.getData().rolename.includes('[USERNAME_LOW]') ||\n                            cell.getData().rolename.includes('[USERNAME_UP]')) {\n                            input.disabled = true;\n                        }\n\n                        return input;\n                    }\n                },\n                {\n                    title: \"\",\n                    width: 40,\n                    headerSort: false,\n                    hozAlign: \"center\",\n                    formatter: function() {\n                        return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                    },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[3],\n                            body: jsstrings[4]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[3]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-rolestable_' + ocinstanceid).click(function() {\n            rolestable.addRow({'rolename': '', 'actions': '', 'permanent': 0});\n        });\n\n        var metadatatable = new Tabulator(\"#metadatatable_\" + ocinstanceid, {\n            data: JSON.parse(metadatainput.val()),\n            layout: \"fitColumns\",\n            movableRows: true,\n            rowMoved: function() {\n                // Order by row position\n                var data = metadatatable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                metadatainput.val(JSON.stringify(data));\n            },\n            dataChanged: function() {\n                // Order by row position\n                var data = metadatatable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                $('#' + metadatainputid).val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[7] + '   ' + $('#helpbtnname_' + ocinstanceid).html(),\n                    field: \"name\",\n                    editor: \"input\",\n                    widthGrow: 1,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[8], field: \"datatype\", widthGrow: 1, headerSort: false, editor: \"select\", editorParams:\n                        {\n                            values: {\n                                'text': 'String (text)',\n                                'select': 'Drop Down (select)',\n                                'autocomplete': 'Arrays (autocomplete)',\n                                'textarea': 'Long Text (textarea)',\n                                'date_time_selector': 'Date Time Selector (datetime)'\n                            }\n                        }\n                },\n                {\n                    title: jsstrings[9] + '   ' + $('#helpbtndescription_' + ocinstanceid).html(),\n                    field: \"description\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[10],\n                    field: \"required\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n\n                        function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                var checked = $(this).prop('checked');\n                                cell.getRow().update({'required': checked ? 1 : 0});\n                                // Make readonly disabled if this item is required.\n                                var readonlyelm = cell.getRow().getCell(\"readonly\").getElement();\n                                var nodelist = readonlyelm.querySelectorAll('.readonly-checkbox');\n                                if (checked && nodelist.length) {\n                                    if (cell.getRow().getData()?.readonly) {\n                                        nodelist[0].click();\n                                    }\n                                    nodelist[0].setAttribute('title', jsstrings[19]);\n                                    nodelist[0].style.cursor = 'not-allowed';\n                                    nodelist[0].disabled = true;\n                                } else {\n                                    nodelist[0].removeAttribute('title');\n                                    nodelist[0].style.cursor = 'pointer';\n                                    nodelist[0].disabled = false;\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[11] + '   ' + $('#helpbtnreadonly_' + ocinstanceid).html(),\n                    field: \"readonly\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var isrequired = cell.getRow().getData()?.required;\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.classList.add('readonly-checkbox');\n                            input.checked = isrequired ? false : cell.getValue();\n                            if (isrequired) {\n                                input.setAttribute('title', jsstrings[19]);\n                                input.style.cursor = 'not-allowed';\n                                input.disabled = true;\n                            } else {\n                                input.removeAttribute('title');\n                                input.style.cursor = 'pointer';\n                                input.disabled = false;\n                            }\n                            input.addEventListener('click', function() {\n                                // Check if required is enabled.\n                                if (cell.getRow().getData()?.required) {\n                                    // If required is enabled, we disable this checkbox.\n                                    $(this).prop('checked', false);\n                                } else {\n                                    // Otherwise, we provide the checkbox with normal input.\n                                    cell.getRow().update({'readonly': $(this).prop('checked') ? 1 : 0});\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[12] + '   ' + $('#helpbtnparams_' + ocinstanceid).html(),\n                    field: \"param_json\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[13] + '   ' + $('#helpbtndefaultable_' + ocinstanceid).html(),\n                    field: \"defaultable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'defaultable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[20] + '   ' + $('#helpbtnbatchable_' + ocinstanceid).html(),\n                    field: \"batchable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'batchable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[5],\n                            body: jsstrings[6]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[14]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-metadatatable_' + ocinstanceid).click(function() {\n            metadatatable.addRow({'datatype': 'text', 'required': 0, 'readonly': 0, 'param_json': null});\n        });\n\n        var metadataseriestable = new Tabulator(\"#metadataseriestable_\" + ocinstanceid, {\n            data: JSON.parse(metadataseriesinput.val()),\n            layout: \"fitColumns\",\n            movableRows: true,\n            rowMoved: function() {\n                // Order by row position\n                var data = metadataseriestable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                metadataseriesinput.val(JSON.stringify(data));\n            },\n            dataChanged: function() {\n                // Order by row position\n                var data = metadataseriestable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                $('#' + metadataseriesinputid).val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[7] + '   ' + $('#helpbtnname_' + ocinstanceid).html(),\n                    field: \"name\",\n                    editor: \"input\",\n                    widthGrow: 1,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[8], field: \"datatype\", widthGrow: 1, headerSort: false, editor: \"select\", editorParams:\n                        {\n                            values: {\n                                'text': 'String (text)',\n                                'select': 'Drop Down (select)',\n                                'autocomplete': 'Arrays (autocomplete)',\n                                'textarea': 'Long Text (textarea)',\n                                'date_time_selector': 'Date Time Selector (datetime)'\n                            }\n                        }\n                },\n                {\n                    title: jsstrings[9] + '   ' + $('#helpbtndescription_' + ocinstanceid).html(),\n                    field: \"description\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[10],\n                    field: \"required\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n\n                        function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                var checked = $(this).prop('checked');\n                                cell.getRow().update({'required': checked ? 1 : 0});\n                                // Make readonly disabled if this item is required.\n                                var readonlyelm = cell.getRow().getCell(\"readonly\").getElement();\n                                var nodelist = readonlyelm.querySelectorAll('.readonly-checkbox');\n                                if (checked && nodelist.length) {\n                                    if (cell.getRow().getData()?.readonly) {\n                                        nodelist[0].click();\n                                    }\n                                    nodelist[0].setAttribute('title', jsstrings[19]);\n                                    nodelist[0].style.cursor = 'not-allowed';\n                                    nodelist[0].disabled = true;\n                                } else {\n                                    nodelist[0].removeAttribute('title');\n                                    nodelist[0].style.cursor = 'pointer';\n                                    nodelist[0].disabled = false;\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[11] + '   ' + $('#helpbtnreadonly_' + ocinstanceid).html(),\n                    field: \"readonly\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var isrequired = cell.getRow().getData()?.required;\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.classList.add('readonly-checkbox');\n                            input.checked = isrequired ? false : cell.getValue();\n                            if (isrequired) {\n                                input.setAttribute('title', jsstrings[19]);\n                                input.style.cursor = 'not-allowed';\n                                input.disabled = true;\n                            } else {\n                                input.removeAttribute('title');\n                                input.style.cursor = 'pointer';\n                                input.disabled = false;\n                            }\n                            input.addEventListener('click', function() {\n                                // Check if required is enabled.\n                                if (cell.getRow().getData()?.required) {\n                                    // If required is enabled, we disable this checkbox.\n                                    $(this).prop('checked', false);\n                                } else {\n                                    // Otherwise, we provide the checkbox with normal input.\n                                    cell.getRow().update({'readonly': $(this).prop('checked') ? 1 : 0});\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[12] + '   ' + $('#helpbtnparams_' + ocinstanceid).html(),\n                    field: \"param_json\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[13] + '   ' + $('#helpbtndefaultable_' + ocinstanceid).html(),\n                    field: \"defaultable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'defaultable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[5],\n                            body: jsstrings[6]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[14]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-metadataseriestable_' + ocinstanceid).click(function() {\n            metadataseriestable.addRow({'datatype': 'text', 'required': 0, 'readonly': 0, 'param_json': null});\n        });\n\n        console.log(\"Bye WOrld\");\n\n        return;\n    }).catch(Notification.exception);\n};\n\n\n    export const init_tool = (instancesinputid) => {\n\n        console.log(\"Hello Dude\");\n\n        // Load strings\n        var strings = [\n            {key: 'name', component: 'tool_opencast'},\n            {key: 'isvisible', component: 'tool_opencast'},\n            {key: 'addinstance', component: 'tool_opencast'},\n            {key: 'delete_instance', component: 'tool_opencast'},\n            {key: 'delete_instance_confirm', component: 'tool_opencast'},\n            {key: 'delete', component: 'moodle'},\n            {key: 'isdefault', component: 'tool_opencast'},\n        ];\n        str.get_strings(strings).then(function(jsstrings) {\n            // Style hidden input.\n            var instancesinput = $('#' + instancesinputid);\n\n            if (!instancesinput.length) {\n                return;\n            }\n\n            instancesinput.parent().hide();\n            instancesinput.parent().next().hide(); // Default value.\n\n            var instancestable = new Tabulator(\"#instancestable\", {\n                data: JSON.parse(instancesinput.val()),\n                layout: \"fitColumns\",\n                dataChanged: function(data) {\n                    instancesinput.val(JSON.stringify(data));\n                },\n                columns: [\n                    {title: 'ID', field: \"id\", widthGrow: 0},\n                    {title: jsstrings[0], field: \"name\", editor: \"input\", widthGrow: 2},\n                    {\n                        title: jsstrings[1],\n                        field: \"isvisible\",\n                        hozAlign: \"center\",\n                        widthGrow: 0,\n                        formatter: function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'isvisible': $(this).prop('checked') ? 1 : 0});\n                            });\n                            return input;\n                        }\n                    },\n                    {\n                        title: jsstrings[6],\n                        field: \"isdefault\",\n                        hozAlign: \"center\",\n                        widthGrow: 0,\n                        formatter: function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'isdefault': $(this).prop('checked') ? 1 : 0});\n                            });\n                            return input;\n                        }\n                    },\n                    {\n                        title: \"\",\n                        width: 40,\n                        headerSort: false,\n                        hozAlign: \"center\",\n                        formatter: function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                        cellClick: function(e, cell) {\n                            ModalFactory.create({\n                                type: ModalFactory.types.SAVE_CANCEL,\n                                title: jsstrings[3],\n                                body: jsstrings[4]\n                            })\n                                .then(function(modal) {\n                                    modal.setSaveButtonText(jsstrings[5]);\n                                    modal.getRoot().on(ModalEvents.save, function() {\n                                        cell.getRow().delete();\n                                    });\n                                    modal.show();\n                                    return;\n                                }).catch(Notification.exception);\n                        }\n                    }\n                ],\n            });\n\n            $('#addrow-instancestable').click(function() {\n                var instances = JSON.parse(instancesinput.val());\n                var ids = instances.map(x => x.id);\n                ids.sort();\n                var nextid = 0;\n                var i;\n\n                if (ids.includes(1)) {\n                    for (i = 0; i < ids.length; i++) {\n                        let nextElem = i + 1;\n                        if (nextElem === ids.length) {\n                            nextid = ids[i] + 1;\n                        } else if (ids[nextElem] !== ids[i] + 1) {\n                            nextid = ids[i] + 1;\n                            break;\n                        }\n                    }\n                } else {\n                    nextid = 1;\n                }\n\n                instancestable.addRow({'id': nextid, 'isvisible': false, 'isdefault': false});\n            });\n            return;\n        }).catch(Notification.exception);\n\n};\n\nexport const init_additional_settings = (transcriptionflavorinputid, ocinstanceid) => {\n\n    console.log(\"Hello WOrld\");\n\n    // Load strings\n    var strings = [\n        {key: 'name', component: 'tool_opencast'},\n        {key: 'isvisible', component: 'tool_opencast'},\n        {key: 'addinstance', component: 'tool_opencast'},\n        {key: 'delete_instance', component: 'tool_opencast'},\n        {key: 'delete_instance_confirm', component: 'tool_opencast'},\n        {key: 'delete', component: 'moodle'},\n        {key: 'isdefault', component: 'tool_opencast'},\n        {key: 'heading_role', component: 'tool_opencast'},\n        {key: 'heading_actions', component: 'tool_opencast'},\n        {key: 'heading_permanent', component: 'tool_opencast'},\n        {key: 'delete_role', component: 'tool_opencast'},\n        {key: 'delete_confirm_role', component: 'tool_opencast'},\n        {key: 'delete_metadata', component: 'tool_opencast'},\n        {key: 'delete_confirm_metadata', component: 'tool_opencast'},\n        {key: 'heading_name', component: 'tool_opencast'},\n        {key: 'heading_datatype', component: 'tool_opencast'},\n        {key: 'heading_description', component: 'tool_opencast'},\n        {key: 'heading_required', component: 'tool_opencast'},\n        {key: 'heading_readonly', component: 'tool_opencast'},\n        {key: 'heading_params', component: 'tool_opencast'},\n        {key: 'heading_defaultable', component: 'tool_opencast'},\n        {key: 'transcription_flavor_key', component: 'tool_opencast'},\n        {key: 'transcription_flavor_value', component: 'tool_opencast'},\n        {key: 'transcription_flavor_delete', component: 'tool_opencast'},\n        {key: 'transcription_flavor_confirm_delete', component: 'tool_opencast'},\n        {key: 'readonly_disabled_tooltip_text', component: 'tool_opencast'},\n        {key: 'heading_batchable', component: 'tool_opencast'},\n    ];\n    str.get_strings(strings).then(function(jsstrings) {\n\n        // We need to check and apply the transcription section first,\n        // because it might be rendered in different sections (additional features)\n        var hastranscription = false;\n        var transcriptionflavorinput = $('#' + transcriptionflavorinputid);\n        if (transcriptionflavorinput.is(':visible')) {\n            hastranscription = true;\n            transcriptionflavorinput.parent().hide();\n            transcriptionflavorinput.parent().next().hide(); // Default value.\n        }\n        // Transcription flavor.\n        // We run this part if only the transcription is available.\n        if (hastranscription) {\n            // Because flavors are introduced in a way that it needs to take its value from the default,\n            // and the input value is not set via an upgrade, therefore, we would need to introduce a new\n            // way of extracting defaults and put it as its value.\n            extractDefaults(transcriptionflavorinput);\n            var transcriptionflavoroptions = new Tabulator(\"#transcriptionflavorsoptions_\" + ocinstanceid, {\n                data: JSON.parse(transcriptionflavorinput.val()),\n                layout: \"fitColumns\",\n                dataChanged: function(data) {\n                    data = data.filter(value => value.key && value.value);\n                    transcriptionflavorinput.val(JSON.stringify(data));\n                },\n                columns: [\n                    {title: jsstrings[15], field: \"key\", headerSort: false, editor: \"input\", widthGrow: 1},\n                    {title: jsstrings[16], field: \"value\", headerSort: false, editor: \"input\", widthGrow: 1},\n                    {\n                        title: \"\",\n                        width: 40,\n                        headerSort: false,\n                        hozAlign: \"center\",\n                        formatter: function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                        cellClick: function(e, cell) {\n                            ModalFactory.create({\n                                type: ModalFactory.types.SAVE_CANCEL,\n                                title: jsstrings[17],\n                                body: jsstrings[18]\n                            })\n                                .then(function(modal) {\n                                    modal.setSaveButtonText(jsstrings[17]);\n                                    modal.getRoot().on(ModalEvents.save, function() {\n                                        cell.getRow().delete();\n                                    });\n                                    modal.show();\n                                    return;\n                                }).catch(Notification.exception);\n                        }\n                    }\n                ],\n            });\n\n            $('#addrow-transcriptionflavorsoptions_' + ocinstanceid).click(function() {\n                transcriptionflavoroptions.addRow({'key': '', 'value': ''});\n            });\n        }\n\n        /**\n         * Gets the default input value and replace it with actual value if it values are not initialised\n         *\n         * @param {object} input\n         */\n        function extractDefaults(input) {\n            var value = input.val();\n            if (value == '') {\n                var defaultstext = input.parent().next().text();\n                defaultstext = defaultstext != '' ?\n                    defaultstext.slice(defaultstext.indexOf('['), defaultstext.lastIndexOf(']') + 1) : '';\n                if (defaultstext != '') {\n                    input.val(defaultstext);\n                }\n            }\n        }\n\n        return;\n    }).catch(Notification.exception);\n\n};\n"],"names":["rolesinputid","metadatainputid","metadataseriesinputid","ocinstanceid","console","log","str","get_strings","key","component","then","jsstrings","rolesinput","JSON","stringify","val","parent","hide","next","length","metadatainput","metadataseriesinput","rolestable","Tabulator","data","parse","layout","dataChanged","filter","value","rolename","columns","title","field","editor","widthGrow","cellEdited","cell","getData","includes","getRow","update","getCell","getElement","getElementsByTagName","disabled","hozAlign","formatter","input","document","createElement","type","style","cursor","checked","getValue","addEventListener","this","prop","width","headerSort","cellClick","e","create","ModalFactory","types","SAVE_CANCEL","body","modal","setSaveButtonText","getRoot","on","ModalEvents","save","delete","show","catch","Notification","exception","click","addRow","metadatatable","movableRows","rowMoved","getRows","map","row","name","html","editorParams","values","nodelist","querySelectorAll","_cell$getRow$getData","readonly","setAttribute","removeAttribute","isrequired","_cell$getRow$getData2","required","classList","add","_cell$getRow$getData3","metadataseriestable","_cell$getRow$getData4","_cell$getRow$getData5","_cell$getRow$getData6","instancesinputid","instancesinput","instancestable","ids","x","id","sort","i","nextid","nextElem","transcriptionflavorinputid","hastranscription","transcriptionflavorinput","is","defaultstext","text","slice","indexOf","lastIndexOf","extractDefaults","transcriptionflavoroptions"],"mappings":";;;;;;;ikCAiCqC,CAACA,aAAcC,gBAAiBC,sBAAuBC,gBAExFC,QAAQC,IAAI,eAgCZC,IAAIC,YA7BU,CACV,CAACC,IAAK,OAAQC,UAAW,iBACzB,CAACD,IAAK,YAAaC,UAAW,iBAC9B,CAACD,IAAK,cAAeC,UAAW,iBAChC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,0BAA2BC,UAAW,iBAC5C,CAACD,IAAK,SAAUC,UAAW,UAC3B,CAACD,IAAK,YAAaC,UAAW,iBAC9B,CAACD,IAAK,eAAgBC,UAAW,iBACjC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,oBAAqBC,UAAW,iBACtC,CAACD,IAAK,cAAeC,UAAW,iBAChC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,0BAA2BC,UAAW,iBAC5C,CAACD,IAAK,eAAgBC,UAAW,iBACjC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,iBAAkBC,UAAW,iBACnC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,2BAA4BC,UAAW,iBAC7C,CAACD,IAAK,6BAA8BC,UAAW,iBAC/C,CAACD,IAAK,8BAA+BC,UAAW,iBAChD,CAACD,IAAK,sCAAuCC,UAAW,iBACxD,CAACD,IAAK,iCAAkCC,UAAW,iBACnD,CAACD,IAAK,oBAAqBC,UAAW,mBAEjBC,MAAK,SAASC,WAGnCP,QAAQC,IAAI,gBAAiBL,kBAEzBY,YAAa,mBAAE,IAAMZ,iBAEzBI,QAAQC,IAAI,cAAeO,YAC3BR,QAAQC,IAAI,eAAiBQ,KAAKC,UAAUF,WAAY,KAAM,IAC9DR,QAAQC,IAAI,kBAAmBO,WAAWG,OAG1CH,WAAWI,SAASC,OACpBL,WAAWI,SAASE,OAAOD,OAGtBL,WAAWO,YAIZC,eAAgB,mBAAE,IAAMnB,iBAC5BmB,cAAcJ,SAASC,OACvBG,cAAcJ,SAASE,OAAOD,WAE1BI,qBAAsB,mBAAE,IAAMnB,uBAClCmB,oBAAoBL,SAASC,OAC7BI,oBAAoBL,SAASE,OAAOD,WAEhCK,WAAa,IAAIC,mBAAU,eAAiBpB,aAAc,CAC1DqB,KAAMX,KAAKY,MAAMb,WAAWG,OAC5BW,OAAQ,aACRC,YAAa,SAASH,MAClBA,KAAOA,KAAKI,QAAOC,OAASA,MAAMC,WAClClB,WAAWG,IAAIF,KAAKC,UAAUU,QAElCO,QAAS,CACL,CACIC,MAAOrB,UAAU,GAAIsB,MAAO,WAAYC,OAAQ,QAASC,UAAW,EAAGC,WAAY,SAASC,MACpFA,KAAKC,UAAUR,SAASS,SAAS,eAAiBF,KAAKC,UAAUR,SAASS,SAAS,mBACnFF,KAAKC,UAAUR,SAASS,SAAS,kBAEjCF,KAAKG,SAASC,OAAO,WAAc,IACnCJ,KAAKG,SAASE,QAAQ,aAAaC,aAAaC,qBAAqB,SAAS,GAAGC,UAAW,GAE5FR,KAAKG,SAASE,QAAQ,aAAaC,aAAaC,qBAAqB,SAAS,GAAGC,UAAW,IAIxG,CAACb,MAAOrB,UAAU,GAAIsB,MAAO,UAAWC,OAAQ,QAASC,UAAW,GACpE,CACIH,MAAOrB,UAAU,GACjBsB,MAAO,YACPa,SAAU,SACVX,UAAW,EACXY,UAAW,SAASV,UACZW,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,YAAc,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,QAGjErB,KAAKC,UAAUR,SAASS,SAAS,eAAiBF,KAAKC,UAAUR,SAASS,SAAS,mBACnFF,KAAKC,UAAUR,SAASS,SAAS,oBACjCS,MAAMH,UAAW,GAGdG,QAGf,CACIhB,MAAO,GACP2B,MAAO,GACPC,YAAY,EACZd,SAAU,SACVC,UAAW,iBACA,0CAEXc,UAAW,SAASC,EAAGzB,6BACN0B,OAAO,CAChBZ,KAAMa,uBAAaC,MAAMC,YACzBlC,MAAOrB,UAAU,GACjBwD,KAAMxD,UAAU,KAEfD,MAAK,SAAS0D,OACXA,MAAMC,kBAAkB1D,UAAU,IAClCyD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCpC,KAAKG,SAASkC,YAElBN,MAAMO,UAEPC,MAAMC,sBAAaC,oCAMxC,sBAAwB3E,cAAc4E,OAAM,WAC1CzD,WAAW0D,OAAO,UAAa,WAAe,aAAiB,WAG/DC,cAAgB,IAAI1D,mBAAU,kBAAoBpB,aAAc,CAChEqB,KAAMX,KAAKY,MAAML,cAAcL,OAC/BW,OAAQ,aACRwD,aAAa,EACbC,SAAU,eAEF3D,KAAOyD,cAAcG,UAAUC,KAAIC,KAAOA,IAAIhD,YAClDd,KAAOA,KAAKI,QAAOC,OAASA,MAAM0D,OAClCnE,cAAcL,IAAIF,KAAKC,UAAUU,QAErCG,YAAa,eAELH,KAAOyD,cAAcG,UAAUC,KAAIC,KAAOA,IAAIhD,YAClDd,KAAOA,KAAKI,QAAOC,OAASA,MAAM0D,2BAChC,IAAMtF,iBAAiBc,IAAIF,KAAKC,UAAUU,QAEhDO,QAAS,CACL,CACIC,MAAOrB,UAAU,GAAK,OAAQ,mBAAE,gBAAkBR,cAAcqF,OAChEvD,MAAO,OACPC,OAAQ,QACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,GAAIsB,MAAO,WAAYE,UAAW,EAAGyB,YAAY,EAAO1B,OAAQ,SAAUuD,aACvF,CACIC,OAAQ,MACI,uBACE,kCACM,iCACJ,0CACU,mCAItC,CACI1D,MAAOrB,UAAU,GAAK,OAAQ,mBAAE,uBAAyBR,cAAcqF,OACvEvD,MAAO,cACPC,OAAQ,WACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,IACjBsB,MAAO,WAAYa,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UAEpE,SAASV,UACDW,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,eACxBF,SAAU,mBAAEG,MAAMC,KAAK,WAC3BrB,KAAKG,SAASC,OAAO,UAAaa,QAAU,EAAI,6BAG5CqC,SADctD,KAAKG,SAASE,QAAQ,YAAYC,aACzBiD,iBAAiB,sBACxCtC,SAAWqC,SAASxE,qCAChBkB,KAAKG,SAASF,2CAAduD,qBAAyBC,UACzBH,SAAS,GAAGZ,QAEhBY,SAAS,GAAGI,aAAa,QAASpF,UAAU,KAC5CgF,SAAS,GAAGvC,MAAMC,OAAS,cAC3BsC,SAAS,GAAG9C,UAAW,IAEvB8C,SAAS,GAAGK,gBAAgB,SAC5BL,SAAS,GAAGvC,MAAMC,OAAS,UAC3BsC,SAAS,GAAG9C,UAAW,MAIxBG,QAGnB,CACIhB,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,oBAAsBR,cAAcqF,OACrEvD,MAAO,WAAYa,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UACpE,SAASV,mCAC2C,SAA5CA,KAAKG,SAASE,QAAQ,QAAQa,kBACvB,SAEP0C,yCAAa5D,KAAKG,SAASF,kDAAd4D,sBAAyBC,SACtCnD,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMoD,UAAUC,IAAI,qBACpBrD,MAAMM,SAAU2C,YAAqB5D,KAAKkB,WACtC0C,YACAjD,MAAM+C,aAAa,QAASpF,UAAU,KACtCqC,MAAMI,MAAMC,OAAS,cACrBL,MAAMH,UAAW,IAEjBG,MAAMgD,gBAAgB,SACtBhD,MAAMI,MAAMC,OAAS,UACrBL,MAAMH,UAAW,GAErBG,MAAMQ,iBAAiB,SAAS,mEAExBnB,KAAKG,SAASF,4CAAdgE,sBAAyBH,6BAEvB1C,MAAMC,KAAK,WAAW,GAGxBrB,KAAKG,SAASC,OAAO,WAAa,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAIjEV,QAGnB,CACIhB,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,kBAAoBR,cAAcqF,OACnEvD,MAAO,aACPC,OAAQ,WACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,uBAAyBR,cAAcqF,OACxEvD,MAAO,cAAea,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UACvE,SAASV,SAC2C,SAA5CA,KAAKG,SAASE,QAAQ,QAAQa,kBACvB,SAEPP,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,cAAgB,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAGhEV,QAGnB,CACIhB,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,qBAAuBR,cAAcqF,OACtEvD,MAAO,YAAaa,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UACrE,SAASV,SAC2C,SAA5CA,KAAKG,SAASE,QAAQ,QAAQa,kBACvB,SAEPP,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,YAAc,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAG9DV,QAGnB,CACIhB,MAAO,GAAI2B,MAAO,GAAIC,YAAY,EAAOd,SAAU,SAAUC,UACzD,iBACW,0CAEfc,UAAW,SAASC,EAAGzB,6BACN0B,OAAO,CAChBZ,KAAMa,uBAAaC,MAAMC,YACzBlC,MAAOrB,UAAU,GACjBwD,KAAMxD,UAAU,KAEfD,MAAK,SAAS0D,OACXA,MAAMC,kBAAkB1D,UAAU,KAClCyD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCpC,KAAKG,SAASkC,YAElBN,MAAMO,UAEPC,MAAMC,sBAAaC,oCAMxC,yBAA2B3E,cAAc4E,OAAM,WAC7CE,cAAcD,OAAO,UAAa,gBAAoB,WAAe,aAAiB,cAGtFuB,oBAAsB,IAAIhF,mBAAU,wBAA0BpB,aAAc,CAC5EqB,KAAMX,KAAKY,MAAMJ,oBAAoBN,OACrCW,OAAQ,aACRwD,aAAa,EACbC,SAAU,eAEF3D,KAAO+E,oBAAoBnB,UAAUC,KAAIC,KAAOA,IAAIhD,YACxDd,KAAOA,KAAKI,QAAOC,OAASA,MAAM0D,OAClClE,oBAAoBN,IAAIF,KAAKC,UAAUU,QAE3CG,YAAa,eAELH,KAAO+E,oBAAoBnB,UAAUC,KAAIC,KAAOA,IAAIhD,YACxDd,KAAOA,KAAKI,QAAOC,OAASA,MAAM0D,2BAChC,IAAMrF,uBAAuBa,IAAIF,KAAKC,UAAUU,QAEtDO,QAAS,CACL,CACIC,MAAOrB,UAAU,GAAK,OAAQ,mBAAE,gBAAkBR,cAAcqF,OAChEvD,MAAO,OACPC,OAAQ,QACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,GAAIsB,MAAO,WAAYE,UAAW,EAAGyB,YAAY,EAAO1B,OAAQ,SAAUuD,aACvF,CACIC,OAAQ,MACI,uBACE,kCACM,iCACJ,0CACU,mCAItC,CACI1D,MAAOrB,UAAU,GAAK,OAAQ,mBAAE,uBAAyBR,cAAcqF,OACvEvD,MAAO,cACPC,OAAQ,WACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,IACjBsB,MAAO,WAAYa,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UAEpE,SAASV,UACDW,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,eACxBF,SAAU,mBAAEG,MAAMC,KAAK,WAC3BrB,KAAKG,SAASC,OAAO,UAAaa,QAAU,EAAI,8BAG5CqC,SADctD,KAAKG,SAASE,QAAQ,YAAYC,aACzBiD,iBAAiB,sBACxCtC,SAAWqC,SAASxE,sCAChBkB,KAAKG,SAASF,4CAAdkE,sBAAyBV,UACzBH,SAAS,GAAGZ,QAEhBY,SAAS,GAAGI,aAAa,QAASpF,UAAU,KAC5CgF,SAAS,GAAGvC,MAAMC,OAAS,cAC3BsC,SAAS,GAAG9C,UAAW,IAEvB8C,SAAS,GAAGK,gBAAgB,SAC5BL,SAAS,GAAGvC,MAAMC,OAAS,UAC3BsC,SAAS,GAAG9C,UAAW,MAIxBG,QAGnB,CACIhB,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,oBAAsBR,cAAcqF,OACrEvD,MAAO,WAAYa,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UACpE,SAASV,mCAC2C,SAA5CA,KAAKG,SAASE,QAAQ,QAAQa,kBACvB,SAEP0C,yCAAa5D,KAAKG,SAASF,kDAAdmE,sBAAyBN,SACtCnD,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMoD,UAAUC,IAAI,qBACpBrD,MAAMM,SAAU2C,YAAqB5D,KAAKkB,WACtC0C,YACAjD,MAAM+C,aAAa,QAASpF,UAAU,KACtCqC,MAAMI,MAAMC,OAAS,cACrBL,MAAMH,UAAW,IAEjBG,MAAMgD,gBAAgB,SACtBhD,MAAMI,MAAMC,OAAS,UACrBL,MAAMH,UAAW,GAErBG,MAAMQ,iBAAiB,SAAS,mEAExBnB,KAAKG,SAASF,4CAAdoE,sBAAyBP,6BAEvB1C,MAAMC,KAAK,WAAW,GAGxBrB,KAAKG,SAASC,OAAO,WAAa,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAIjEV,QAGnB,CACIhB,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,kBAAoBR,cAAcqF,OACnEvD,MAAO,aACPC,OAAQ,WACRC,UAAW,EACXyB,YAAY,GAEhB,CACI5B,MAAOrB,UAAU,IAAM,OAAQ,mBAAE,uBAAyBR,cAAcqF,OACxEvD,MAAO,cAAea,SAAU,SAAUX,UAAW,EAAGyB,YAAY,EAAOb,UACvE,SAASV,SAC2C,SAA5CA,KAAKG,SAASE,QAAQ,QAAQa,kBACvB,SAEPP,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMI,MAAMC,OAAS,UACrBL,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,cAAgB,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAGhEV,QAGnB,CACIhB,MAAO,GAAI2B,MAAO,GAAIC,YAAY,EAAOd,SAAU,SAAUC,UACzD,iBACW,0CAEfc,UAAW,SAASC,EAAGzB,6BACN0B,OAAO,CAChBZ,KAAMa,uBAAaC,MAAMC,YACzBlC,MAAOrB,UAAU,GACjBwD,KAAMxD,UAAU,KAEfD,MAAK,SAAS0D,OACXA,MAAMC,kBAAkB1D,UAAU,KAClCyD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCpC,KAAKG,SAASkC,YAElBN,MAAMO,UAEPC,MAAMC,sBAAaC,oCAMxC,+BAAiC3E,cAAc4E,OAAM,WACnDwB,oBAAoBvB,OAAO,UAAa,gBAAoB,WAAe,aAAiB,UAGhG5E,QAAQC,IAAI,iBAGbuE,MAAMC,sBAAaC,+BAII6B,mBAEtBvG,QAAQC,IAAI,cAYZC,IAAIC,YATU,CACV,CAACC,IAAK,OAAQC,UAAW,iBACzB,CAACD,IAAK,YAAaC,UAAW,iBAC9B,CAACD,IAAK,cAAeC,UAAW,iBAChC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,0BAA2BC,UAAW,iBAC5C,CAACD,IAAK,SAAUC,UAAW,UAC3B,CAACD,IAAK,YAAaC,UAAW,mBAETC,MAAK,SAASC,eAE/BiG,gBAAiB,mBAAE,IAAMD,qBAExBC,eAAezF,QAIpByF,eAAe5F,SAASC,OACxB2F,eAAe5F,SAASE,OAAOD,WAE3B4F,eAAiB,IAAItF,mBAAU,kBAAmB,CAClDC,KAAMX,KAAKY,MAAMmF,eAAe7F,OAChCW,OAAQ,aACRC,YAAa,SAASH,MAClBoF,eAAe7F,IAAIF,KAAKC,UAAUU,QAEtCO,QAAS,CACL,CAACC,MAAO,KAAMC,MAAO,KAAME,UAAW,GACtC,CAACH,MAAOrB,UAAU,GAAIsB,MAAO,OAAQC,OAAQ,QAASC,UAAW,GACjE,CACIH,MAAOrB,UAAU,GACjBsB,MAAO,YACPa,SAAU,SACVX,UAAW,EACXY,UAAW,SAASV,UACZW,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,YAAc,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAE9DV,QAGf,CACIhB,MAAOrB,UAAU,GACjBsB,MAAO,YACPa,SAAU,SACVX,UAAW,EACXY,UAAW,SAASV,UACZW,MAAQC,SAASC,cAAc,gBACnCF,MAAMG,KAAO,WACbH,MAAMM,QAAUjB,KAAKkB,WACrBP,MAAMQ,iBAAiB,SAAS,WAC5BnB,KAAKG,SAASC,OAAO,YAAc,mBAAEgB,MAAMC,KAAK,WAAa,EAAI,OAE9DV,QAGf,CACIhB,MAAO,GACP2B,MAAO,GACPC,YAAY,EACZd,SAAU,SACVC,UAAW,iBACA,0CAEXc,UAAW,SAASC,EAAGzB,6BACN0B,OAAO,CAChBZ,KAAMa,uBAAaC,MAAMC,YACzBlC,MAAOrB,UAAU,GACjBwD,KAAMxD,UAAU,KAEfD,MAAK,SAAS0D,OACXA,MAAMC,kBAAkB1D,UAAU,IAClCyD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCpC,KAAKG,SAASkC,YAElBN,MAAMO,UAEPC,MAAMC,sBAAaC,oCAMxC,0BAA0BC,OAAM,eAE1B+B,IADYjG,KAAKY,MAAMmF,eAAe7F,OACtBsE,KAAI0B,GAAKA,EAAEC,KAC/BF,IAAIG,WAEAC,EADAC,OAAS,KAGTL,IAAIvE,SAAS,OACR2E,EAAI,EAAGA,EAAIJ,IAAI3F,OAAQ+F,IAAK,KACzBE,SAAWF,EAAI,KACfE,WAAaN,IAAI3F,OACjBgG,OAASL,IAAII,GAAK,OACf,GAAIJ,IAAIM,YAAcN,IAAII,GAAK,EAAG,CACrCC,OAASL,IAAII,GAAK,cAK1BC,OAAS,EAGbN,eAAe7B,OAAO,IAAOmC,kBAAqB,aAAoB,WAG3EvC,MAAMC,sBAAaC,8CAIU,CAACuC,2BAA4BlH,gBAEjEC,QAAQC,IAAI,eAgCZC,IAAIC,YA7BU,CACV,CAACC,IAAK,OAAQC,UAAW,iBACzB,CAACD,IAAK,YAAaC,UAAW,iBAC9B,CAACD,IAAK,cAAeC,UAAW,iBAChC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,0BAA2BC,UAAW,iBAC5C,CAACD,IAAK,SAAUC,UAAW,UAC3B,CAACD,IAAK,YAAaC,UAAW,iBAC9B,CAACD,IAAK,eAAgBC,UAAW,iBACjC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,oBAAqBC,UAAW,iBACtC,CAACD,IAAK,cAAeC,UAAW,iBAChC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,kBAAmBC,UAAW,iBACpC,CAACD,IAAK,0BAA2BC,UAAW,iBAC5C,CAACD,IAAK,eAAgBC,UAAW,iBACjC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,mBAAoBC,UAAW,iBACrC,CAACD,IAAK,iBAAkBC,UAAW,iBACnC,CAACD,IAAK,sBAAuBC,UAAW,iBACxC,CAACD,IAAK,2BAA4BC,UAAW,iBAC7C,CAACD,IAAK,6BAA8BC,UAAW,iBAC/C,CAACD,IAAK,8BAA+BC,UAAW,iBAChD,CAACD,IAAK,sCAAuCC,UAAW,iBACxD,CAACD,IAAK,iCAAkCC,UAAW,iBACnD,CAACD,IAAK,oBAAqBC,UAAW,mBAEjBC,MAAK,SAASC,eAI/B2G,kBAAmB,EACnBC,0BAA2B,mBAAE,IAAMF,+BACnCE,yBAAyBC,GAAG,cAC5BF,kBAAmB,EACnBC,yBAAyBvG,SAASC,OAClCsG,yBAAyBvG,SAASE,OAAOD,QAIzCqG,iBAAkB,WAoDGtE,UAER,IADDA,MAAMjC,MACD,KACT0G,aAAezE,MAAMhC,SAASE,OAAOwG,OAGrB,KAFpBD,aAA+B,IAAhBA,aACXA,aAAaE,MAAMF,aAAaG,QAAQ,KAAMH,aAAaI,YAAY,KAAO,GAAK,KAEnF7E,MAAMjC,IAAI0G,eAvDlBK,CAAgBP,8BACZQ,2BAA6B,IAAIxG,mBAAU,gCAAkCpB,aAAc,CAC3FqB,KAAMX,KAAKY,MAAM8F,yBAAyBxG,OAC1CW,OAAQ,aACRC,YAAa,SAASH,MAClBA,KAAOA,KAAKI,QAAOC,OAASA,MAAMrB,KAAOqB,MAAMA,QAC/C0F,yBAAyBxG,IAAIF,KAAKC,UAAUU,QAEhDO,QAAS,CACL,CAACC,MAAOrB,UAAU,IAAKsB,MAAO,MAAO2B,YAAY,EAAO1B,OAAQ,QAASC,UAAW,GACpF,CAACH,MAAOrB,UAAU,IAAKsB,MAAO,QAAS2B,YAAY,EAAO1B,OAAQ,QAASC,UAAW,GACtF,CACIH,MAAO,GACP2B,MAAO,GACPC,YAAY,EACZd,SAAU,SACVC,UAAW,iBACA,0CAEXc,UAAW,SAASC,EAAGzB,6BACN0B,OAAO,CAChBZ,KAAMa,uBAAaC,MAAMC,YACzBlC,MAAOrB,UAAU,IACjBwD,KAAMxD,UAAU,MAEfD,MAAK,SAAS0D,OACXA,MAAMC,kBAAkB1D,UAAU,KAClCyD,MAAME,UAAUC,GAAGC,sBAAYC,MAAM,WACjCpC,KAAKG,SAASkC,YAElBN,MAAMO,UAEPC,MAAMC,sBAAaC,oCAMxC,uCAAyC3E,cAAc4E,OAAM,WAC3DgD,2BAA2B/C,OAAO,KAAQ,SAAa,YAsBhEJ,MAAMC,sBAAaC"}